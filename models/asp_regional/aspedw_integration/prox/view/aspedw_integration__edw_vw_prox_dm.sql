{{
    config(
        materialized='view'
    )
}}

with itg_prox_report_bi_budgetusage as
(
    select * from {{ ref('aspitg_integration__itg_prox_report_bi_budgetusage') }}
),
vw_edw_reg_exch_rate as
(
	select * from {{ ref('aspedw_integration__vw_edw_reg_exch_rate') }}
),
itg_prox_report_bi_contract as
(
	select * from {{ ref('aspitg_integration__itg_prox_report_bi_contract') }}
),
edw_customer_base_dim as
(
	select * from {{ ref('aspedw_integration__edw_customer_base_dim') }}
),
edw_rpt_regional_sellout_offtake as
(
	select * from {{ ref('aspedw_integration__edw_rpt_regional_sellout_offtake') }}
),
itg_mds_rg_prox_product_mapping as
(
	select * from {{ ref('aspitg_integration__itg_mds_rg_prox_product_mapping') }}
),
itg_mds_rg_prox_customer_mapping as
(
	select * from {{ ref('aspitg_integration__itg_mds_rg_prox_customer_mapping') }}
),
edw_vw_os_time_dim as
(
	select * from {{ ref('sgpedw_integration__edw_vw_os_time_dim') }}
),
itg_prox_report_bi_monthcommitment as
(
	select * from {{ ref('aspitg_integration__itg_prox_report_bi_monthcommitment') }}
),
itg_mds_rg_prox_channel_mapping as
(
	select * from {{ ref('aspitg_integration__itg_mds_rg_prox_channel_mapping') }}
),
v_rpt_copa_gcph as
(
	select * from {{ ref('aspedw_integration__v_rpt_copa_gcph') }}
),
itg_prox_report_bi_payment as
(
	select * from {{ ref('aspitg_integration__itg_prox_report_bi_payment') }}
),
cur as
(
	SELECT 
		vw_edw_reg_exch_rate.cntry_key, 
		vw_edw_reg_exch_rate.cntry_nm, 
		vw_edw_reg_exch_rate.rate_type, 
		vw_edw_reg_exch_rate.from_ccy, 
		vw_edw_reg_exch_rate.to_ccy, 
		vw_edw_reg_exch_rate.valid_date, 
		vw_edw_reg_exch_rate.jj_year, 
		vw_edw_reg_exch_rate.jj_mnth_id, 
		vw_edw_reg_exch_rate.exch_rate, 
		vw_edw_reg_exch_rate.to_ratio, 
		vw_edw_reg_exch_rate.from_ratio 
	FROM 
		vw_edw_reg_exch_rate 
	WHERE 
		vw_edw_reg_exch_rate.cntry_key IN (
			SELECT DISTINCT 
				itg_prox_report_bi_budgetusage.applicationid 
			FROM itg_prox_report_bi_budgetusage
		)
		AND vw_edw_reg_exch_rate.to_ccy::text = 'USD'::text
		AND vw_edw_reg_exch_rate.jj_mnth_id::text = (
			SELECT MAX(vw_edw_reg_exch_rate.jj_mnth_id::text) 
			FROM vw_edw_reg_exch_rate
		)
),
ct as
(
	SELECT 
		derived_table1.accountgroupcode, 
		derived_table1.customertype, 
		derived_table1.rtmchannel, 
		derived_table1.rno 
	FROM 
		(SELECT DISTINCT RIGHT(itg_prox_report_bi_contract.accountgroupcode::text,6) AS accountgroupcode, 
				UPPER(TRIM(itg_prox_report_bi_contract.customertype::text)) AS customertype, 
				UPPER(TRIM(itg_prox_report_bi_contract.rtmchannel::text)) AS rtmchannel, 
				ROW_NUMBER() OVER (PARTITION BY RIGHT(itg_prox_report_bi_contract.accountgroupcode::text,6) ORDER BY null) AS rno 
			FROM itg_prox_report_bi_contract
		) derived_table1 
	WHERE 
		derived_table1.rno = 1
),
cb as
(
	SELECT DISTINCT edw_customer_base_dim.cust_nm,
					edw_customer_base_dim.cust_num 
	FROM edw_customer_base_dim
),
sell as
(
	SELECT derived_table2.soldto_code, 
		   derived_table2.sap_parent_customer_key, 
		   derived_table2.sap_parent_customer_description, 
		   derived_table2.sap_customer_channel_key, 
		   derived_table2.sap_customer_channel_description, 
		   derived_table2.sap_customer_sub_channel_key, 
		   derived_table2.sap_sub_channel_description, 
		   derived_table2.sap_go_to_mdl_key, 
		   derived_table2.sap_go_to_mdl_description, 
		   derived_table2.sap_banner_key, 
		   derived_table2.sap_banner_description, 
		   derived_table2.sap_banner_format_key, 
		   derived_table2.sap_banner_format_description, 
		   derived_table2.retail_environment, 
		   derived_table2.customer_segment_key, 
		   derived_table2.customer_segment_description, 
		   derived_table2.from_currency, 
		   derived_table2.to_currency,
		   derived_table2.distributor_additional_attribute1,
		   derived_table2.rno 
	 FROM (SELECT DISTINCT edw_rpt_regional_sellout_offtake.soldto_code, 
						   edw_rpt_regional_sellout_offtake.sap_parent_customer_key, 
						   edw_rpt_regional_sellout_offtake.sap_parent_customer_description, 
						   edw_rpt_regional_sellout_offtake.sap_customer_channel_key, 
						   edw_rpt_regional_sellout_offtake.sap_customer_channel_description, 
						   edw_rpt_regional_sellout_offtake.sap_customer_sub_channel_key, 
						   edw_rpt_regional_sellout_offtake.sap_sub_channel_description, 
						   edw_rpt_regional_sellout_offtake.sap_go_to_mdl_key, 
						   edw_rpt_regional_sellout_offtake.sap_go_to_mdl_description, 
						   edw_rpt_regional_sellout_offtake.sap_banner_key, 
						   edw_rpt_regional_sellout_offtake.sap_banner_description, 
						   edw_rpt_regional_sellout_offtake.sap_banner_format_key, 
						   edw_rpt_regional_sellout_offtake.sap_banner_format_description, 
						   edw_rpt_regional_sellout_offtake.retail_environment, 
						   edw_rpt_regional_sellout_offtake.customer_segment_key, 
						   edw_rpt_regional_sellout_offtake.customer_segment_description, 
						   edw_rpt_regional_sellout_offtake.from_currency, 
						   edw_rpt_regional_sellout_offtake.to_currency,
						   edw_rpt_regional_sellout_offtake.distributor_additional_attribute1,
						   row_number() OVER(PARTITION BY edw_rpt_regional_sellout_offtake.soldto_code order by null) AS rno 
		  FROM edw_rpt_regional_sellout_offtake WHERE (edw_rpt_regional_sellout_offtake.country_code IN (SELECT DISTINCT itg_prox_report_bi_budgetusage.applicationid FROM itg_prox_report_bi_budgetusage))) derived_table2 WHERE derived_table2.rno = 1
),
mds as
(
	SELECT p.regional_brand_name, 
		   p.prox_brand_name,
		   p.prox_brand_code,
		   p.prox_product_name,
		   p.market, 
		   p.category, 
		   p.rno 
	FROM (SELECT DISTINCT itg_mds_rg_prox_product_mapping.regional_brand_name, 
						  itg_mds_rg_prox_product_mapping.prox_brand_name,
						  itg_mds_rg_prox_product_mapping.prox_brand_code,
						  itg_mds_rg_prox_product_mapping.prox_product_name,
						  itg_mds_rg_prox_product_mapping.market, 
						  itg_mds_rg_prox_product_mapping.category, 
						  row_number() OVER(PARTITION BY itg_mds_rg_prox_product_mapping.prox_brand_name,itg_mds_rg_prox_product_mapping.market order by null) AS rno 
		   FROM itg_mds_rg_prox_product_mapping) p 
	WHERE p.rno = 1
),
mds1 as
(
	SELECT p.regional_brand_name, 
		   p.prox_brand_name,
		   p.prox_brand_code,
		   p.market, 
		   p.category, 
		   p.rno 
	FROM (SELECT DISTINCT itg_mds_rg_prox_product_mapping.regional_brand_name, 
						  itg_mds_rg_prox_product_mapping.prox_brand_name,
						  itg_mds_rg_prox_product_mapping.prox_brand_code,
						  itg_mds_rg_prox_product_mapping.market, 
						  itg_mds_rg_prox_product_mapping.category, 
						  row_number() OVER(PARTITION BY itg_mds_rg_prox_product_mapping.regional_brand_name,itg_mds_rg_prox_product_mapping.market order by null) AS rno 
		   FROM itg_mds_rg_prox_product_mapping) p 
	WHERE p.rno = 1
),
mds_cust as
(
	SELECT DISTINCT itg_mds_rg_prox_customer_mapping.prox_cust_code,
					itg_mds_rg_prox_customer_mapping.prox_cust_name,
					itg_mds_rg_prox_customer_mapping.local_cust_code, 
					itg_mds_rg_prox_customer_mapping.category 
	FROM itg_mds_rg_prox_customer_mapping
),
budget as
(
	SELECT DISTINCT itg_prox_report_bi_budgetusage.brandcode, 
					itg_prox_report_bi_budgetusage.brandname 
	FROM itg_prox_report_bi_budgetusage
),
bg as
(
	SELECT cm.rowid, 
		   cm.contractno, 
		   cm.expenseid, 
		   cm.year, 
		   cm.expensemonth, 
		   cm.financemonth, 
		   cm.commitment, 
		   cm.flag, 
		   cm.applicationid, 
		   cm.filename, 
		   cm.run_id, 
		   cm.crt_dttm, 
		   c.accountgroupcode, 
		   c.accountgroupname, 
		   c.materialcode, 
		   c.materialname, 
		   c.channel, 
		   c.expensesubcategory, 
		   c.budgetowner, 
		   c.customertype, 
		   c.hqsoldtocode, 
		   c.hqsoldtoname, 
		   c.contracttempno, 
		   c.contracttitle, 
		   c.themecode, 
		   c.themename, 
		   c.objective, 
		   c.feespaid, 
		   c.contractrevenuerecognitionstartdate, 
		   c.contractrevenuerecognitionenddate, 
		   c.contractpromoexecutionstartdate, 
		   c.contractpromoexecutionenddate, 
		   c.contractcreatedate, 
		   c.contractapprovaldate, 
		   c.contractstatus, 
		   c.dateback, 
		   c.datebackreason, 
		   c.customercode, 
		   c.customername, 
		   c.rebateno, 
		   c.rebateactivityname, 
		   c.customercontractno, 
		   c.expenserevenuerecognitionstartdate, 
		   c.expenserevenuerecognitionenddate, 
		   c.expensepromoexecutionstartdate, 
		   c.expensepromoexecutionenddate, 
		   c.expenseclosed, 
		   c.closeuser, 
		   c.closetime, 
		   c.contracttype, 
		   c.conditiontype, 
		   c.glaccount, 
		   c.expensetypename, 
		   c.profitcenter, 
		   c.ppgcode, 
		   c.ppgname, 
		   c.rate, 
		   c.rtmchannel, 
		   c.paymentmethod, 
		   c.aging, 
		   c.applicant, 
		   c.contractdescription, 
		   c.documentlink, 
		   c.withattachment, 
		   c.dtsmarkuprate 
	FROM (itg_prox_report_bi_monthcommitment cm 
	LEFT JOIN (SELECT DISTINCT itg_prox_report_bi_contract.contractno, 
							   itg_prox_report_bi_contract.expenseid, 
							   itg_prox_report_bi_contract.accountgroupcode, 
							   itg_prox_report_bi_contract.accountgroupname, 
							   itg_prox_report_bi_contract.materialcode, 
							   itg_prox_report_bi_contract.materialname, 
							   itg_prox_report_bi_contract.channel, 
							   itg_prox_report_bi_contract.expensesubcategory, 
							   itg_prox_report_bi_contract.budgetowner, 
							   itg_prox_report_bi_contract.customertype, 
							   itg_prox_report_bi_contract.hqsoldtocode, 
							   itg_prox_report_bi_contract.hqsoldtoname, 
							   itg_prox_report_bi_contract.contracttempno, 
							   itg_prox_report_bi_contract.contracttitle, 
							   itg_prox_report_bi_contract.themecode, 
							   itg_prox_report_bi_contract.themename, 
							   itg_prox_report_bi_contract.objective, 
							   itg_prox_report_bi_contract.feespaid, 
							   itg_prox_report_bi_contract.contractrevenuerecognitionstartdate, 
							   itg_prox_report_bi_contract.contractrevenuerecognitionenddate, 
							   itg_prox_report_bi_contract.contractpromoexecutionstartdate, 
							   itg_prox_report_bi_contract.contractpromoexecutionenddate, 
							   itg_prox_report_bi_contract.contractcreatedate, 
							   itg_prox_report_bi_contract.contractapprovaldate, 
							   itg_prox_report_bi_contract.contractstatus, 
							   itg_prox_report_bi_contract.dateback, 
							   itg_prox_report_bi_contract.datebackreason, 
							   itg_prox_report_bi_contract.customercode, 
							   itg_prox_report_bi_contract.customername, 
							   itg_prox_report_bi_contract.rebateno, 
							   itg_prox_report_bi_contract.rebateactivityname, 
							   itg_prox_report_bi_contract.customercontractno, 
							   itg_prox_report_bi_contract.expenserevenuerecognitionstartdate, 
							   itg_prox_report_bi_contract.expenserevenuerecognitionenddate, 
							   itg_prox_report_bi_contract.expensepromoexecutionstartdate, 
							   itg_prox_report_bi_contract.expensepromoexecutionenddate, 
							   itg_prox_report_bi_contract.expenseclosed, 
							   itg_prox_report_bi_contract.closeuser, 
							   itg_prox_report_bi_contract.closetime, 
							   itg_prox_report_bi_contract.contracttype, 
							   itg_prox_report_bi_contract.conditiontype, 
							   itg_prox_report_bi_contract.glaccount, 
							   itg_prox_report_bi_contract.expensetypename, 
							   itg_prox_report_bi_contract.profitcenter, 
							   itg_prox_report_bi_contract.ppgcode, 
							   itg_prox_report_bi_contract.ppgname, 
							   itg_prox_report_bi_contract.rate, 
							   itg_prox_report_bi_contract.rtmchannel, 
							   itg_prox_report_bi_contract.paymentmethod, 
							   itg_prox_report_bi_contract.aging, 
							   itg_prox_report_bi_contract.applicant, 
							   itg_prox_report_bi_contract.contractdescription, 
							   itg_prox_report_bi_contract.documentlink, 
							   itg_prox_report_bi_contract.withattachment, 
							   itg_prox_report_bi_contract.dtsmarkuprate 
					FROM itg_prox_report_bi_contract) c 
			ON (cm.contractno):: text = (c.contractno):: text
			AND (cm.expenseid):: text = (c.expenseid):: text
	  )
),
mds_chnl as
(
	SELECT DISTINCT itg_mds_rg_prox_channel_mapping.prox_channel_name, 
					itg_mds_rg_prox_channel_mapping.regional_channel_name, 
					itg_mds_rg_prox_channel_mapping.market 
	FROM itg_mds_rg_prox_channel_mapping
),
sell1 as 
(
	SELECT edw_rpt_regional_sellout_offtake.year, 
		   edw_rpt_regional_sellout_offtake.mnth_id, 
		   edw_rpt_regional_sellout_offtake.mnth_no, 
		   edw_rpt_regional_sellout_offtake.univ_year, 
		   edw_rpt_regional_sellout_offtake.univ_month, 
		   edw_rpt_regional_sellout_offtake.country_code, 
		   edw_rpt_regional_sellout_offtake.data_source, 
		   edw_rpt_regional_sellout_offtake.soldto_code, 
		   edw_rpt_regional_sellout_offtake.distributor_additional_attribute1, 
		   edw_rpt_regional_sellout_offtake.distributor_additional_attribute2, 
		   edw_rpt_regional_sellout_offtake.distributor_additional_attribute3, 
		   edw_rpt_regional_sellout_offtake.sap_parent_customer_key, 
		   edw_rpt_regional_sellout_offtake.sap_parent_customer_description, 
		   edw_rpt_regional_sellout_offtake.sap_customer_channel_key, 
		   edw_rpt_regional_sellout_offtake.sap_customer_channel_description, 
		   edw_rpt_regional_sellout_offtake.sap_customer_sub_channel_key, 
		   edw_rpt_regional_sellout_offtake.sap_sub_channel_description, 
		   edw_rpt_regional_sellout_offtake.sap_go_to_mdl_key, 
		   edw_rpt_regional_sellout_offtake.sap_go_to_mdl_description, 
		   edw_rpt_regional_sellout_offtake.sap_banner_key, 
		   edw_rpt_regional_sellout_offtake.sap_banner_description, 
		   edw_rpt_regional_sellout_offtake.sap_banner_format_key, 
		   edw_rpt_regional_sellout_offtake.sap_banner_format_description, 
		   edw_rpt_regional_sellout_offtake.retail_environment, 
		   edw_rpt_regional_sellout_offtake.customer_segment_key, 
		   edw_rpt_regional_sellout_offtake.customer_segment_description, 
		   edw_rpt_regional_sellout_offtake.distributor_code, 
		   edw_rpt_regional_sellout_offtake.global_product_brand, 
		   edw_rpt_regional_sellout_offtake.from_currency, 
		   sum(edw_rpt_regional_sellout_offtake.sellout_sales_value) AS sellout_sales_value, 
		   sum(edw_rpt_regional_sellout_offtake.sellout_value_list_price) AS sellout_value_list_price, 
		   sum(edw_rpt_regional_sellout_offtake.sellout_sales_quantity) AS sellout_sales_quantity 
		   FROM 
			 edw_rpt_regional_sellout_offtake 
		   WHERE 
			 (edw_rpt_regional_sellout_offtake.country_code IN (SELECT DISTINCT itg_prox_report_bi_budgetusage.applicationid FROM itg_prox_report_bi_budgetusage)
			 ) 
			GROUP BY edw_rpt_regional_sellout_offtake.year, 
					 edw_rpt_regional_sellout_offtake.mnth_id, 
					 edw_rpt_regional_sellout_offtake.mnth_no, 
					 edw_rpt_regional_sellout_offtake.univ_year, 
					 edw_rpt_regional_sellout_offtake.univ_month, 
					 edw_rpt_regional_sellout_offtake.country_code, 
					 edw_rpt_regional_sellout_offtake.data_source, 
					 edw_rpt_regional_sellout_offtake.soldto_code, 
					 edw_rpt_regional_sellout_offtake.distributor_additional_attribute1, 
					 edw_rpt_regional_sellout_offtake.distributor_additional_attribute2, 
					 edw_rpt_regional_sellout_offtake.distributor_additional_attribute3, 
					 edw_rpt_regional_sellout_offtake.sap_parent_customer_key, 
					 edw_rpt_regional_sellout_offtake.sap_parent_customer_description, 
					 edw_rpt_regional_sellout_offtake.sap_customer_channel_key, 
					 edw_rpt_regional_sellout_offtake.sap_customer_channel_description, 
					 edw_rpt_regional_sellout_offtake.sap_customer_sub_channel_key, 
					 edw_rpt_regional_sellout_offtake.sap_sub_channel_description, 
					 edw_rpt_regional_sellout_offtake.sap_go_to_mdl_key, 
					 edw_rpt_regional_sellout_offtake.sap_go_to_mdl_description, 
					 edw_rpt_regional_sellout_offtake.sap_banner_key, 
					 edw_rpt_regional_sellout_offtake.sap_banner_description, 
					 edw_rpt_regional_sellout_offtake.sap_banner_format_key, 
					 edw_rpt_regional_sellout_offtake.sap_banner_format_description, 
					 edw_rpt_regional_sellout_offtake.retail_environment, 
					 edw_rpt_regional_sellout_offtake.customer_segment_key, 
					 edw_rpt_regional_sellout_offtake.customer_segment_description, 
					 edw_rpt_regional_sellout_offtake.distributor_code, 
					 edw_rpt_regional_sellout_offtake.global_product_brand, 
					 edw_rpt_regional_sellout_offtake.from_currency
),
sellin as
(
	SELECT 
		coalesce(RIGHT(a.cust_num::text, 6),'') AS cust_num, 
		a.fisc_yr AS year, 
		((a.fisc_yr::character varying || RIGHT(a.fisc_yr_per::text, 2))::character varying) AS mnth_id, 
		RIGHT(a.fisc_yr_per::text, 2) AS mnth_no, 
		a.ctry_nm, 
		CASE 
			WHEN a.ctry_nm::text = 'Indonesia'::text THEN 'ID'::character varying
			WHEN a.ctry_nm::text = 'Singapore'::text THEN 'SG'::character varying
			WHEN a.ctry_nm::text = 'Malaysia'::text THEN 'MY'::character varying
			WHEN a.ctry_nm::text = 'Philippines'::text THEN 'PH'::character varying
			ELSE a.ctry_nm 
		END AS cntry_cd, 
		a.from_crncy AS from_currency, 
		a.gcph_brand, 
		SUM(a.nts_usd) AS nts_usd, 
		SUM(a.nts_lcy) AS nts_lcy, 
		SUM(a.gts_usd) AS gts_usd, 
		SUM(a.gts_lcy) AS gts_lcy, 
		SUM(a.nts_qty) AS nts_qty, 
		cal.cal_year AS univ_year, 
		cal.cal_mnth_no AS univ_month 
	FROM 
		v_rpt_copa_gcph a 
		LEFT JOIN edw_vw_os_time_dim cal 
			ON to_date(a.fisc_day::date) = cal.cal_date
	WHERE 
		a.ctry_nm::text IN ('Indonesia'::text, 'Singapore'::text, 'Malaysia'::text, 'Philippines'::text)
	GROUP BY 
		coalesce(RIGHT(a.cust_num::text, 6),''), 
		a.fisc_yr, 
		((a.fisc_yr::character varying || RIGHT(a.fisc_yr_per::text, 2))::character varying), 
		RIGHT(a.fisc_yr_per::text, 2), 
		a.ctry_nm, 
		CASE 
			WHEN a.ctry_nm::text = 'Indonesia'::text THEN 'ID'::character varying
			WHEN a.ctry_nm::text = 'Singapore'::text THEN 'SG'::character varying
			WHEN a.ctry_nm::text = 'Malaysia'::text THEN 'MY'::character varying
			WHEN a.ctry_nm::text = 'Philippines'::text THEN 'PH'::character varying
			ELSE a.ctry_nm 
		END, 
		a.from_crncy, 
		a.gcph_brand, 
		cal.cal_year, 
		cal.cal_mnth_no
),
block1 as
(
	SELECT base.year, 
		   base.mnth_id, 
		   base.mnth_no, 
		   base.univ_year, 
		   base.univ_month, 
		   base.country_code, 
		   base.data_source, 
		   base.soldto_code, 
		   base.distributor_code, 
		   base.distributor_name, 
		   base.distributor_additional_attribute1, 
		   base.distributor_additional_attribute2, 
		   base.distributor_additional_attribute3, 
		   base.sap_parent_customer_key, 
		   base.sap_parent_customer_description, 
		   base.sap_customer_channel_key, 
		   base.sap_customer_channel_description, 
		   base.sap_customer_sub_channel_key, 
		   base.sap_sub_channel_description, 
		   base.sap_go_to_mdl_key, 
		   base.sap_go_to_mdl_description, 
		   base.sap_banner_key, 
		   base.sap_banner_description, 
		   base.sap_banner_format_key, 
		   base.sap_banner_format_description, 
		   base.retail_environment, 
		   base.customer_segment_key, 
		   NULL AS region, 
		   NULL AS zone_or_area, 
		   base.customer_segment_description, 
		   base.global_product_brand, 
		   NULL AS global_product_franchise, 
		   (base.global_product_category):: character varying AS global_product_category, 
		   NULL AS sls_org, 
		   base.from_currency, 
		   base.to_currecy, 
		   base.exchange_rate, 
		   base.exrt_from_ratio, 
		   base.exrt_to_ratio, 
		   base.sellout_sales_quantity, 
		   base.sellout_sales_value, 
		   (base.sellout_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellout_sales_value_usd, 
		   base.sellout_value_list_price, 
		   (base.sellout_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellout_value_list_price_usd, 
		   base.tpm_customer_cd, 
		   base.tpm_customer_nm, 
		   base.tpm_brand_cd, 
		   base.tpm_brand_nm, 
		   base.tpm_channel, 
		   base.tpm_sub_channel, 
		   NULL AS market_portfolio, 
		   (base.customer_segmentation):: character varying AS customer_segmentation, 
		   base.tpm_expensesubcategory, 
		   base.tpm_budgettype, 
		   base.tpm_budgetamount, 
		   base.tpm_used_budget, 
		   base.tpm_budgetbalance, 
		   base.tpm_ytdcommitment, 
		   base.tpm_ytgcommitment, 
		   base.tpm_commitment, 
		   base.tpm_penddingamount, 
		   base.tpm_paid, 
		   base.tpm_approvedpayment, 
		   base.tpm_pendingapprovalpayment, 
		   base.tpm_availabletopay, 
		   base.tpm_draftamount, 
		   base.tpm_budgetowner, 
		   (base.tpm_budgetamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetamount_usd, 
		   (base.tpm_used_budget * (base.exchange_rate):: numeric(38, 11)) AS tpm_used_budget_usd, 
		   (base.tpm_budgetbalance * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetbalance_usd, 
		   (base.tpm_ytdcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytdcommitment_usd, 
		   (base.tpm_ytgcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytgcommitment_usd, 
		   (base.tpm_commitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_usd, 
		   (base.tpm_penddingamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_penddingamount_usd, 
		   (base.tpm_paid * (base.exchange_rate):: numeric(38, 11)) AS tpm_paid_usd, 
		   (base.tpm_approvedpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_approvedpayment_usd, 
		   (base.tpm_pendingapprovalpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_pendingapprovalpayment_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS tpm_availabletopay_usd, 
		   (base.tpm_draftamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_draftamount_usd, 
		   base.tpm_customertype, 
		   base.tpm_hqsoldtocode, 
		   base.tpm_hqsoldtoname, 
		   base.tpm_contractno, 
		   base.tpm_contracttempno, 
		   base.tpm_contracttitle, 
		   base.tpm_themecode, 
		   base.tpm_themename, 
		   base.tpm_objective, 
		   base.tpm_feespaid, 
		   base.tpm_contractrevenuerecognitionstartdate, 
		   base.tpm_contractrevenuerecognitionenddate, 
		   base.tpm_contractpromoexecutionstartdate, 
		   base.tpm_contractpromoexecutionenddate, 
		   base.tpm_contractcreatedate, 
		   base.tpm_contractapprovaldate, 
		   base.tpm_contractstatus, 
		   base.tpm_dateback, 
		   base.tpm_datebackreason, 
		   base.tpm_expenseid, 
		   base.tpm_contract_customercode, 
		   base.tpm_contract_customername, 
		   base.tpm_rebateno, 
		   base.tpm_rebateactivityname, 
		   base.tpm_customercontractno, 
		   base.tpm_expenserevenuerecognitionstartdate, 
		   base.tpm_expenserevenuerecognitionenddate, 
		   base.tpm_expensepromoexecutionstartdate, 
		   base.tpm_expensepromoexecutionenddate, 
		   base.tpm_expenseclosed, 
		   base.tpm_closeuser, 
		   base.tpm_closetime, 
		   base.tpm_contracttype, 
		   base.tpm_conditiontype, 
		   base.tpm_glaccount, 
		   base.tpm_expensetypename, 
		   base.tpm_profitcenter, 
		   base.tpm_ppgcode, 
		   base.tpm_ppgname, 
		   base.tpm_rate, 
		   base.tpm_materialcode, 
		   base.tpm_materialname, 
		   base.tpm_rtmchannel, 
		   base.tpm_paymentmethod, 
		   base.tpm_expenseamount, 
		   base.tpm_commitmentamount, 
		   base.tpm_accrualreleaseamountwithouttax, 
		   base.tpm_closeamount, 
		   base.tpm_paidamount, 
		   base.tpm_approvedamount, 
		   base.tpm_unpaidamount, 
		   base.tpm_agingdays, 
		   base.tpm_aging, 
		   base.tpm_applicant, 
		   base.tpm_contractdescription, 
		   base.tpm_documentlink, 
		   base.tpm_withattachment, 
		   base.tpm_dtsmarkuprate, 
		   (base.tpm_expenseamount * (base.exchange_rate):: numeric(38, 11)) AS expenseamount_usd, 
		   (base.tpm_commitmentamount * (base.exchange_rate):: numeric(38, 11)) AS commitmentamount_usd, 
		   (base.tpm_accrualreleaseamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS accrualreleaseamountwithouttax_usd, 
		   (base.tpm_paidamount * (base.exchange_rate):: numeric(38, 11)) AS paidamount_usd, 
		   (base.tpm_approvedamount * (base.exchange_rate):: numeric(38, 11)) AS approvedamount_usd, 
		   (base.tpm_unpaidamount * (base.exchange_rate):: numeric(38, 11)) AS unpaidamount_usd, 
		   ((0):: numeric):: numeric(38, 11) AS availabletopay_usd, 
		   (base.tpm_closeamount * (base.exchange_rate):: numeric(38, 11)) AS closeamount_usd, 
		   base.tpm_paymentno, 
		   base.tpm_paymentstatus, 
		   base.tpm_paytocode, 
		   base.tpm_paytoname, 
		   base.tpm_paymenttitle, 
		   base.tpm_reverseno, 
		   base.tpm_oldreverseno, 
		   base.tpm_invoicenumber, 
		   base.tpm_invoicetype, 
		   base.tpm_sapdocnumber, 
		   base.tpm_sapdocdate, 
		   base.tpm_paymentamountwithouttax, 
		   base.tpm_invoiceamountwithouttax, 
		   base.tpm_vatcode, 
		   base.tpm_vatamount, 
		   base.tpm_whtcode, 
		   base.tpm_whtamount, 
		   base.tpm_amountpayable, 
		   base.tpm_supportingdocuments, 
		   base.tpm_currentapprovaluser, 
		   base.tpm_rejectreason, 
		   base.tpm_contractnotemp, 
		   base.tpm_paymentstartdate, 
		   base.tpm_paymentenddate, 
		   base.tpm_autoallocate, 
		   base.tpm_parked, 
		   base.tpm_payfromaccrual, 
		   base.tpm_accrualglaccount, 
		   base.tpm_contractoriginalamount, 
		   base.tpm_contractavailabletopay, 
		   base.tpm_plannedbalance, 
		   base.tpm_saprebateno, 
		   base.tpm_rebatesettlementno, 
		   base.tpm_sapcmno, 
		   base.tpm_sapcmdate, 
		   base.tpm_contractdetailstatus, 
		   base.tpm_createuser, 
		   base.tpm_createtime, 
		   base.tpm_applicantdate, 
		   base.tpm_approvedate, 
		   base.tpm_postingdate, 
		   base.tpm_postingperiod, 
		   base.tpm_fillingid, 
		   base.tpm_endtoendleadtime, 
		   base.tpm_salesinputleadtime, 
		   base.tpm_salesapprovalleadtime, 
		   base.tpm_mrc, 
		   base.tpm_printatddate, 
		   base.tpm_invoicenovat, 
		   base.tpm_invoicenowht, 
		   base.tpm_businesstaxcode, 
		   base.tpm_businesstaxamount, 
		   base.tpm_businesstax, 
		   (base.tpm_paymentamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS paymentamountwithouttax_usd, 
		   (base.tpm_invoiceamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS invoiceamountwithouttax_usd, 
		   (base.tpm_vatamount * (base.exchange_rate):: numeric(38, 11)) AS vatamount_usd, 
		   (base.tpm_whtamount * (base.exchange_rate):: numeric(38, 11)) AS whtamount_usd, 
		   (base.tpm_amountpayable * (base.exchange_rate):: numeric(38, 11)) AS amountpayable_usd, 
		   (base.tpm_contractoriginalamount * (base.exchange_rate):: numeric(38, 11)) AS contractoriginalamount_usd, 
		   (base.tpm_contractavailabletopay * (base.exchange_rate):: numeric(38, 11)) AS contractavailabletopay_usd, 
		   (base.tpm_plannedbalance * (base.exchange_rate):: numeric(38, 11)) AS plannedbalance_usd, 
		   (base.tpm_businesstaxamount * (base.exchange_rate):: numeric(38, 11)) AS businesstaxamount_usd, 
		   base.tpm_commitment_monthly, 
		   (base.tpm_commitment_monthly * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_monthly_usd, 
		   base.tpm_commitment_monthly_flag, 
		   base.sellin_sales_quantity, 
		   base.sellin_sales_value, 
		   (base.sellin_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellin_sales_value_usd, 
		   base.sellin_value_list_price, 
		   (base.sellin_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellin_value_list_price_usd, 
		   CASE WHEN ((base.country_code):: text = 'ID' :: text) THEN 'Indonesia' :: character varying 
				WHEN ((base.country_code):: text = 'SG' :: text) THEN 'Singapore' :: character varying 
				WHEN ((base.country_code):: text = 'MY' :: text) THEN 'Malaysia' :: character varying 
				WHEN ((base.country_code):: text = 'PH' :: text) THEN 'Philippines' :: character varying 
		   ELSE base.country_code END AS country_name, 
		   to_date((base.mnth_id):: text,'YYYYMM' :: text) AS dm_date 
		 FROM 
			(SELECT 
				(bg.budgetyear):: character varying AS year, 
				NULL :: character varying AS mnth_id, 
				NULL :: character varying AS mnth_no, 
				(bg.budgetyear):: character varying AS univ_year, 
				NULL :: character varying AS univ_month, 
				bg.applicationid AS country_code, 
				'PRO-X BUDGET' :: character varying AS data_source, 
				(right((bg.accountgroupcode):: text,6)):: character varying AS soldto_code, 
				(right((bg.accountgroupcode):: text,6)):: character varying AS distributor_code, 
				cb.cust_nm AS distributor_name, 
				NULL :: character varying AS distributor_additional_attribute1, 
				NULL :: character varying AS distributor_additional_attribute2, 
				NULL :: character varying AS distributor_additional_attribute3, 
				(upper((sell.sap_parent_customer_key):: text)):: character varying AS sap_parent_customer_key, 
				(upper((sell.sap_parent_customer_description):: text)):: character varying AS sap_parent_customer_description, 
				(upper((sell.sap_customer_channel_key):: text)):: character varying AS sap_customer_channel_key, 
				(upper((sell.sap_customer_channel_description):: text)):: character varying AS sap_customer_channel_description, 
				(upper((sell.sap_customer_sub_channel_key):: text)):: character varying AS sap_customer_sub_channel_key, 
				(upper((sell.sap_sub_channel_description):: text)):: character varying AS sap_sub_channel_description, 
				(upper((sell.sap_go_to_mdl_key):: text)):: character varying AS sap_go_to_mdl_key, 
				(upper((sell.sap_go_to_mdl_description):: text)):: character varying AS sap_go_to_mdl_description, 
				(upper((sell.sap_banner_key):: text)):: character varying AS sap_banner_key, 
				(upper((sell.sap_banner_description):: text)):: character varying AS sap_banner_description, 
				(upper((sell.sap_banner_format_key):: text)):: character varying AS sap_banner_format_key, 
				(upper((sell.sap_banner_format_description):: text)):: character varying AS sap_banner_format_description, 
				(upper((sell.retail_environment):: text)):: character varying AS retail_environment, 
				(upper((sell.customer_segment_key):: text)):: character varying AS customer_segment_key, 
				(upper((sell.customer_segment_description):: text)):: character varying AS customer_segment_description, 
				(CASE WHEN (mds.regional_brand_name IS NOT NULL) THEN upper((mds.regional_brand_name):: text) ELSE upper((bg.brandname):: text) END):: character varying AS global_product_brand, 
				upper((mds.category):: text) AS global_product_category, 
				NULL :: character varying AS sls_org, 
				CASE WHEN ((bg.applicationid):: text = 'ID' :: text) THEN 'IDR' :: character varying 
					 ELSE CASE WHEN ((bg.applicationid):: text = 'MY' :: text) THEN 'MYR' :: character varying 
					 ELSE CASE WHEN ((bg.applicationid):: text = 'SG' :: text) THEN 'SGD' :: character varying 
					 ELSE CASE WHEN ((bg.applicationid):: text = 'PH' :: text) THEN 'PHP' :: character varying 
				ELSE sell.from_currency END END END END AS from_currency, 
				'USD' :: character varying AS to_currecy, 
				trunc((cur.exch_rate / (cur.from_ratio * cur.to_ratio)),5) AS exchange_rate, 
				cur.from_ratio AS exrt_from_ratio, 
				cur.to_ratio AS exrt_to_ratio, 
				((0):: numeric):: numeric(18, 0) AS sellout_sales_quantity, 
				((0):: numeric):: numeric(18, 0) AS sellout_sales_value, 
				((0):: numeric):: numeric(18, 0) AS sellout_sales_value_usd, 
				((0):: numeric):: numeric(18, 0) AS sellout_value_list_price, 
				((0):: numeric):: numeric(18, 0) AS sellout_value_list_price_usd, 
				(right((bg.accountgroupcode):: text,6)):: character varying AS tpm_customer_cd, 
				(upper((bg.accountgroupname):: text)):: character varying AS tpm_customer_nm, 
				(upper((bg.brandcode):: text)):: character varying AS tpm_brand_cd, 
				(upper((bg.brandname):: text)):: character varying AS tpm_brand_nm, 
				(upper((bg.channel):: text)):: character varying AS tpm_channel, 
				(upper((bg.subchannel):: text)):: character varying AS tpm_sub_channel, 
				upper((mds_cust.category):: text) AS customer_segmentation, 
				(upper((bg.expensesubcategory):: text)):: character varying AS tpm_expensesubcategory, 
				(upper((bg.budgettype):: text)):: character varying AS tpm_budgettype, 
				(bg.budgetamount):: numeric(38, 11) AS tpm_budgetamount, 
				(bg.usedbudget):: numeric(38, 11) AS tpm_used_budget, 
				(bg.budgetbalance):: numeric(38, 11) AS tpm_budgetbalance, 
				(bg.ytdcommitment):: numeric(38, 11) AS tpm_ytdcommitment, 
				(bg.ytgcommitment):: numeric(38, 11) AS tpm_ytgcommitment, 
				(bg.commitment):: numeric(38, 11) AS tpm_commitment, 
				(bg.pendingamount):: numeric(38, 11) AS tpm_penddingamount, 
				(bg.paid):: numeric(38, 11) AS tpm_paid, 
				(bg.approvedpayment):: numeric(38, 11) AS tpm_approvedpayment, 
				(bg.pendingapprovalpayment):: numeric(38, 11) AS tpm_pendingapprovalpayment, 
				(bg.availabletopay):: numeric(38, 11) AS tpm_availabletopay, 
				(bg.draftamount):: numeric(38, 11) AS tpm_draftamount, 
				bg.budgetowner AS tpm_budgetowner, 
				(ct.customertype):: character varying AS tpm_customertype, 
				NULL :: character varying AS tpm_hqsoldtocode, 
				NULL :: character varying AS tpm_hqsoldtoname, 
				NULL :: character varying AS tpm_contractno, 
				NULL :: character varying AS tpm_contracttempno, 
				NULL :: character varying AS tpm_contracttitle, 
				NULL :: character varying AS tpm_themecode, 
				NULL :: character varying AS tpm_themename, 
				NULL :: character varying AS tpm_objective, 
				NULL :: character varying AS tpm_feespaid, 
				NULL :: date AS tpm_contractrevenuerecognitionstartdate, 
				NULL :: date AS tpm_contractrevenuerecognitionenddate, 
				NULL :: date AS tpm_contractpromoexecutionstartdate, 
				NULL :: date AS tpm_contractpromoexecutionenddate, 
				NULL :: date AS tpm_contractcreatedate, 
				NULL :: date AS tpm_contractapprovaldate, 
				NULL :: character varying AS tpm_contractstatus, 
				NULL :: character varying AS tpm_dateback, 
				NULL :: character varying AS tpm_datebackreason, 
				NULL :: character varying AS tpm_expenseid, 
				NULL :: character varying AS tpm_contract_customercode, 
				NULL :: character varying AS tpm_contract_customername, 
				NULL :: character varying AS tpm_rebateno, 
				NULL :: character varying AS tpm_rebateactivityname, 
				NULL :: character varying AS tpm_customercontractno, 
				NULL :: date AS tpm_expenserevenuerecognitionstartdate, 
				NULL :: date AS tpm_expenserevenuerecognitionenddate, 
				NULL :: date AS tpm_expensepromoexecutionstartdate, 
				NULL :: date AS tpm_expensepromoexecutionenddate, 
				NULL :: character varying AS tpm_expenseclosed, 
				NULL :: character varying AS tpm_closeuser, 
				NULL :: date AS tpm_closetime, 
				NULL :: character varying AS tpm_contracttype, 
				NULL :: character varying AS tpm_conditiontype, 
				NULL :: character varying AS tpm_glaccount, 
				NULL :: character varying AS tpm_expensetypename, 
				NULL :: character varying AS tpm_profitcenter, 
				NULL :: character varying AS tpm_ppgcode, 
				NULL :: character varying AS tpm_ppgname, 
				NULL :: character varying AS tpm_rate, 
				NULL :: character varying AS tpm_materialcode, 
				NULL :: character varying AS tpm_materialname, 
				(ct.rtmchannel):: character varying AS tpm_rtmchannel, 
				NULL :: character varying AS tpm_paymentmethod, 
				((0):: numeric):: numeric(18, 0) AS tpm_expenseamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_commitmentamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_accrualreleaseamountwithouttax, 
				((0):: numeric):: numeric(18, 0) AS tpm_closeamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_paidamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_approvedamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_unpaidamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_agingdays, 
				NULL :: character varying AS tpm_aging, 
				NULL :: character varying AS tpm_applicant, 
				NULL :: character varying AS tpm_contractdescription, 
				NULL :: character varying AS tpm_documentlink, 
				NULL :: character varying AS tpm_withattachment, 
				NULL :: character varying AS tpm_dtsmarkuprate, 
				NULL :: character varying AS tpm_paymentno, 
				NULL :: character varying AS tpm_paymentstatus, 
				NULL :: character varying AS tpm_paytocode, 
				NULL :: character varying AS tpm_paytoname, 
				NULL :: character varying AS tpm_paymenttitle, 
				NULL :: character varying AS tpm_reverseno, 
				NULL :: character varying AS tpm_oldreverseno, 
				NULL :: character varying AS tpm_invoicenumber, 
				NULL :: character varying AS tpm_invoicetype, 
				NULL :: character varying AS tpm_sapdocnumber, 
				NULL :: date AS tpm_sapdocdate, 
				((0):: numeric):: numeric(18, 0) AS tpm_paymentamountwithouttax, 
				((0):: numeric):: numeric(18, 0) AS tpm_invoiceamountwithouttax, 
				NULL :: character varying AS tpm_vatcode, 
				((0):: numeric):: numeric(18, 0) AS tpm_vatamount, 
				NULL :: character varying AS tpm_whtcode, 
				((0):: numeric):: numeric(18, 0) AS tpm_whtamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_amountpayable, 
				NULL :: character varying AS tpm_supportingdocuments, 
				NULL :: character varying AS tpm_currentapprovaluser, 
				NULL :: character varying AS tpm_rejectreason, 
				NULL :: character varying AS tpm_contractnotemp, 
				NULL :: date AS tpm_paymentstartdate, 
				NULL :: date AS tpm_paymentenddate, 
				NULL :: character varying AS tpm_autoallocate, 
				NULL :: character varying AS tpm_parked, 
				NULL :: character varying AS tpm_payfromaccrual, 
				NULL :: character varying AS tpm_accrualglaccount, 
				((0):: numeric):: numeric(18, 0) AS tpm_contractoriginalamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_contractavailabletopay, 
				((0):: numeric):: numeric(18, 0) AS tpm_plannedbalance, 
				NULL :: character varying AS tpm_saprebateno, 
				NULL :: character varying AS tpm_rebatesettlementno, 
				NULL :: character varying AS tpm_sapcmno, 
				NULL :: date AS tpm_sapcmdate, 
				NULL :: character varying AS tpm_contractdetailstatus, 
				NULL :: character varying AS tpm_createuser, 
				NULL :: date AS tpm_createtime, 
				NULL :: date AS tpm_applicantdate, 
				NULL :: date AS tpm_approvedate, 
				NULL :: date AS tpm_postingdate, 
				NULL :: character varying AS tpm_postingperiod, 
				NULL :: character varying AS tpm_fillingid, 
				(NULL :: numeric):: numeric(18, 0) AS tpm_endtoendleadtime, 
				(NULL :: numeric):: numeric(18, 0) AS tpm_salesinputleadtime, 
				(NULL :: numeric):: numeric(18, 0) AS tpm_salesapprovalleadtime, 
				NULL :: character varying AS tpm_mrc, 
				NULL :: date AS tpm_printatddate, 
				NULL :: character varying AS tpm_invoicenovat, 
				NULL :: character varying AS tpm_invoicenowht, 
				NULL :: character varying AS tpm_businesstaxcode, 
				((0):: numeric):: numeric(18, 0) AS tpm_businesstaxamount, 
				NULL :: character varying AS tpm_businesstax, 
				((0):: numeric):: numeric(18, 0) AS plannedbalance_usd, 
				((0):: numeric):: numeric(18, 0) AS businesstaxamount_usd, 
				((0):: numeric):: numeric(18, 0) AS tpm_commitment_monthly, 
				NULL :: character varying AS tpm_commitment_monthly_flag, 
				((0):: numeric):: numeric(18, 0) AS sellin_sales_quantity, 
				((0):: numeric):: numeric(18, 0) AS sellin_sales_value, 
				((0):: numeric):: numeric(18, 0) AS sellin_value_list_price 
				FROM itg_prox_report_bi_budgetusage bg LEFT JOIN cur ON
				(bg.applicationid):: text = (cur.cntry_key):: text
				LEFT JOIN ct ON right((bg.accountgroupcode):: text,6) = right(ct.accountgroupcode, 6)
				LEFT JOIN cb ON right((bg.accountgroupcode):: text,6) = right((cb.cust_num):: text,6)
				LEFT JOIN sell ON right((bg.accountgroupcode):: text,6) = (sell.soldto_code):: text
				LEFT JOIN mds ON upper((bg.brandname):: text) = upper((mds.prox_brand_name):: text)
							  AND (bg.applicationid):: text = (mds.market):: text
				LEFT JOIN mds_cust ON right((bg.accountgroupcode):: text,6) = (mds_cust.local_cust_code):: text
			) base
),
block2 as
(
	SELECT base.year, 
		   base.mnth_id, 
		   base.mnth_no, 
		   base.univ_year, 
		   base.univ_month, 
		   base.country_code, 
		   base.data_source, 
		   base.soldto_code, 
		   base.distributor_code, 
		   base.distributor_name, 
		   base.distributor_additional_attribute1, 
		   base.distributor_additional_attribute2, 
		   base.distributor_additional_attribute3, 
		   base.sap_parent_customer_key, 
		   base.sap_parent_customer_description, 
		   base.sap_customer_channel_key, 
		   base.sap_customer_channel_description, 
		   base.sap_customer_sub_channel_key, 
		   base.sap_sub_channel_description, 
		   base.sap_go_to_mdl_key, 
		   base.sap_go_to_mdl_description, 
		   base.sap_banner_key, 
		   base.sap_banner_description, 
		   base.sap_banner_format_key, 
		   base.sap_banner_format_description, 
		   base.retail_environment, 
		   base.customer_segment_key, 
		   NULL AS region, 
		   NULL AS zone_or_area, 
		   base.customer_segment_description, 
		   base.global_product_brand, 
		   NULL AS global_product_franchise, 
		   (base.global_product_category):: character varying AS global_product_category, 
		   NULL AS sls_org, 
		   base.from_currency, 
		   base.to_currecy, 
		   base.exchange_rate, 
		   base.exrt_from_ratio, 
		   base.exrt_to_ratio, 
		   base.sellout_sales_quantity, 
		   base.sellout_sales_value, 
		   (base.sellout_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellout_sales_value_usd, 
		   base.sellout_value_list_price, 
		   (base.sellout_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellout_value_list_price_usd, 
		   base.tpm_customer_cd, 
		   base.tpm_customer_nm, 
		   base.tpm_brand_cd, 
		   base.tpm_brand_nm, 
		   base.tpm_channel, 
		   base.tpm_sub_channel, 
		   NULL AS market_portfolio, 
		   (base.customer_segmentation):: character varying AS customer_segmentation, 
		   base.tpm_expensesubcategory, 
		   base.tpm_budgettype, 
		   base.tpm_budgetamount, 
		   base.tpm_used_budget, 
		   base.tpm_budgetbalance, 
		   base.tpm_ytdcommitment, 
		   base.tpm_ytgcommitment, 
		   base.tpm_commitment, 
		   base.tpm_penddingamount, 
		   base.tpm_paid, 
		   base.tpm_approvedpayment, 
		   base.tpm_pendingapprovalpayment, 
		   base.tpm_availabletopay, 
		   base.tpm_draftamount, 
		   base.tpm_budgetowner, 
		   (base.tpm_budgetamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetamount_usd, 
		   (base.tpm_used_budget * (base.exchange_rate):: numeric(38, 11)) AS tpm_used_budget_usd, 
		   (base.tpm_budgetbalance * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetbalance_usd, 
		   (base.tpm_ytdcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytdcommitment_usd, 
		   (base.tpm_ytgcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytgcommitment_usd, 
		   (base.tpm_commitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_usd, 
		   (base.tpm_penddingamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_penddingamount_usd, 
		   (base.tpm_paid * (base.exchange_rate):: numeric(38, 11)) AS tpm_paid_usd, 
		   (base.tpm_approvedpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_approvedpayment_usd, 
		   (base.tpm_pendingapprovalpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_pendingapprovalpayment_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS tpm_availabletopay_usd, 
		   (base.tpm_draftamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_draftamount_usd, 
		   base.tpm_customertype, 
		   base.tpm_hqsoldtocode, 
		   base.tpm_hqsoldtoname, 
		   base.tpm_contractno, 
		   base.tpm_contracttempno, 
		   base.tpm_contracttitle, 
		   base.tpm_themecode, 
		   base.tpm_themename, 
		   base.tpm_objective, 
		   base.tpm_feespaid, 
		   base.tpm_contractrevenuerecognitionstartdate, 
		   base.tpm_contractrevenuerecognitionenddate, 
		   base.tpm_contractpromoexecutionstartdate, 
		   base.tpm_contractpromoexecutionenddate, 
		   base.tpm_contractcreatedate, 
		   base.tpm_contractapprovaldate, 
		   base.tpm_contractstatus, 
		   base.tpm_dateback, 
		   base.tpm_datebackreason, 
		   base.tpm_expenseid, 
		   base.tpm_contract_customercode, 
		   base.tpm_contract_customername, 
		   base.tpm_rebateno, 
		   base.tpm_rebateactivityname, 
		   base.tpm_customercontractno, 
		   base.tpm_expenserevenuerecognitionstartdate, 
		   base.tpm_expenserevenuerecognitionenddate, 
		   base.tpm_expensepromoexecutionstartdate, 
		   base.tpm_expensepromoexecutionenddate, 
		   base.tpm_expenseclosed, 
		   base.tpm_closeuser, 
		   base.tpm_closetime, 
		   base.tpm_contracttype, 
		   base.tpm_conditiontype, 
		   base.tpm_glaccount, 
		   base.tpm_expensetypename, 
		   base.tpm_profitcenter, 
		   base.tpm_ppgcode, 
		   base.tpm_ppgname, 
		   base.tpm_rate, 
		   base.tpm_materialcode, 
		   base.tpm_materialname, 
		   base.tpm_rtmchannel, 
		   base.tpm_paymentmethod, 
		   base.tpm_expenseamount, 
		   base.tpm_commitmentamount, 
		   base.tpm_accrualreleaseamountwithouttax, 
		   base.tpm_closeamount, 
		   base.tpm_paidamount, 
		   base.tpm_approvedamount, 
		   base.tpm_unpaidamount, 
		   base.tpm_agingdays, 
		   base.tpm_aging, 
		   base.tpm_applicant, 
		   base.tpm_contractdescription, 
		   base.tpm_documentlink, 
		   base.tpm_withattachment, 
		   base.tpm_dtsmarkuprate, 
		   (base.tpm_expenseamount * (base.exchange_rate):: numeric(38, 11)) AS expenseamount_usd, 
		   (base.tpm_commitmentamount * (base.exchange_rate):: numeric(38, 11)) AS commitmentamount_usd, 
		   (base.tpm_accrualreleaseamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS accrualreleaseamountwithouttax_usd, 
		   (base.tpm_paidamount * (base.exchange_rate):: numeric(38, 11)) AS paidamount_usd, 
		   (base.tpm_approvedamount * (base.exchange_rate):: numeric(38, 11)) AS approvedamount_usd, 
		   (base.tpm_unpaidamount * (base.exchange_rate):: numeric(38, 11)) AS unpaidamount_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS availabletopay_usd, 
		   (base.tpm_closeamount * (base.exchange_rate):: numeric(38, 11)) AS closeamount_usd, 
		   base.tpm_paymentno, 
		   base.tpm_paymentstatus, 
		   base.tpm_paytocode, 
		   base.tpm_paytoname, 
		   base.tpm_paymenttitle, 
		   base.tpm_reverseno, 
		   base.tpm_oldreverseno, 
		   base.tpm_invoicenumber, 
		   base.tpm_invoicetype, 
		   base.tpm_sapdocnumber, 
		   base.tpm_sapdocdate, 
		   base.tpm_paymentamountwithouttax, 
		   base.tpm_invoiceamountwithouttax, 
		   base.tpm_vatcode, 
		   base.tpm_vatamount, 
		   base.tpm_whtcode, 
		   base.tpm_whtamount, 
		   base.tpm_amountpayable, 
		   base.tpm_supportingdocuments, 
		   base.tpm_currentapprovaluser, 
		   base.tpm_rejectreason, 
		   base.tpm_contractnotemp, 
		   base.tpm_paymentstartdate, 
		   base.tpm_paymentenddate, 
		   base.tpm_autoallocate, 
		   base.tpm_parked, 
		   base.tpm_payfromaccrual, 
		   base.tpm_accrualglaccount, 
		   base.tpm_contractoriginalamount, 
		   base.tpm_contractavailabletopay, 
		   base.tpm_plannedbalance, 
		   base.tpm_saprebateno, 
		   base.tpm_rebatesettlementno, 
		   base.tpm_sapcmno, 
		   base.tpm_sapcmdate, 
		   base.tpm_contractdetailstatus, 
		   base.tpm_createuser, 
		   base.tpm_createtime, 
		   base.tpm_applicantdate, 
		   base.tpm_approvedate, 
		   base.tpm_postingdate, 
		   base.tpm_postingperiod, 
		   base.tpm_fillingid, 
		   base.tpm_endtoendleadtime, 
		   base.tpm_salesinputleadtime, 
		   base.tpm_salesapprovalleadtime, 
		   base.tpm_mrc, 
		   base.tpm_printatddate, 
		   base.tpm_invoicenovat, 
		   base.tpm_invoicenowht, 
		   base.tpm_businesstaxcode, 
		   base.tpm_businesstaxamount, 
		   base.tpm_businesstax, 
		   (base.tpm_paymentamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS paymentamountwithouttax_usd, 
		   (base.tpm_invoiceamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS invoiceamountwithouttax_usd, 
		   (base.tpm_vatamount * (base.exchange_rate):: numeric(38, 11)) AS vatamount_usd, 
		   (base.tpm_whtamount * (base.exchange_rate):: numeric(38, 11)) AS whtamount_usd, 
		   (base.tpm_amountpayable * (base.exchange_rate):: numeric(38, 11)) AS amountpayable_usd, 
		   (base.tpm_contractoriginalamount * (base.exchange_rate):: numeric(38, 11)) AS contractoriginalamount_usd, 
		   (base.tpm_contractavailabletopay * (base.exchange_rate):: numeric(38, 11)) AS contractavailabletopay_usd, 
		   (base.tpm_plannedbalance * (base.exchange_rate):: numeric(38, 11)) AS plannedbalance_usd, 
		   (base.tpm_businesstaxamount * (base.exchange_rate):: numeric(38, 11)) AS businesstaxamount_usd, 
		   base.tpm_commitment_monthly, 
		   (base.tpm_commitment_monthly * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_monthly_usd, 
		   base.tpm_commitment_monthly_flag, 
		   base.sellin_sales_quantity, 
		   base.sellin_sales_value, 
		   (base.sellin_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellin_sales_value_usd, 
		   base.sellin_value_list_price, 
		   (base.sellin_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellin_value_list_price_usd, 
		   CASE WHEN ((base.country_code):: text = 'ID' :: text) THEN 'Indonesia' :: character varying 
				WHEN ((base.country_code):: text = 'SG' :: text) THEN 'Singapore' :: character varying 
				WHEN ((base.country_code):: text = 'MY' :: text) THEN 'Malaysia' :: character varying 
				WHEN ((base.country_code):: text = 'PH' :: text) THEN 'Philippines' :: character varying 
		   ELSE base.country_code END AS country_name, 
		   to_date((base.mnth_id):: text,'YYYYMM' :: text) AS dm_date 
		FROM 
		  (
			SELECT bg.budgetyear AS year, 
				   (cal.mnth_id):: character varying AS mnth_id, 
				   (cal.mnth_no):: character varying AS mnth_no, 
				   bg.budgetyear AS univ_year, 
				   (cal.cal_mnth_no):: character varying AS univ_month, 
				   bg.applicationid AS country_code, 
				   'PRO-X CONTRACT' :: character varying AS data_source, 
				   (right((bg.accountgroupcode):: text,6)):: character varying AS soldto_code, 
				   (right((bg.accountgroupcode):: text,6)):: character varying AS distributor_code, 
				   cb.cust_nm AS distributor_name, 
				   NULL :: character varying AS distributor_additional_attribute1, 
				   NULL :: character varying AS distributor_additional_attribute2, 
				   NULL :: character varying AS distributor_additional_attribute3, 
				   (upper((sell.sap_parent_customer_key):: text)):: character varying AS sap_parent_customer_key, 
				   (upper((sell.sap_parent_customer_description):: text)):: character varying AS sap_parent_customer_description, 
				   (upper((sell.sap_customer_channel_key):: text)):: character varying AS sap_customer_channel_key, 
				   (upper((sell.sap_customer_channel_description):: text)):: character varying AS sap_customer_channel_description, 
				   (upper((sell.sap_customer_sub_channel_key):: text)):: character varying AS sap_customer_sub_channel_key, 
				   (upper((sell.sap_sub_channel_description):: text)):: character varying AS sap_sub_channel_description, 
				   (upper((sell.sap_go_to_mdl_key):: text)):: character varying AS sap_go_to_mdl_key, 
				   (upper((sell.sap_go_to_mdl_description):: text)):: character varying AS sap_go_to_mdl_description, 
				   (upper((sell.sap_banner_key):: text)):: character varying AS sap_banner_key, 
				   (upper((sell.sap_banner_description):: text)):: character varying AS sap_banner_description, 
				   (upper((sell.sap_banner_format_key):: text)):: character varying AS sap_banner_format_key, 
				   (upper((sell.sap_banner_format_description):: text)):: character varying AS sap_banner_format_description, 
				   (upper((sell.retail_environment):: text)):: character varying AS retail_environment, 
				   (upper((sell.customer_segment_key):: text)):: character varying AS customer_segment_key, 
				   (upper((sell.customer_segment_description):: text)):: character varying AS customer_segment_description, 
				   (CASE WHEN (mds.regional_brand_name IS NOT NULL) THEN upper((mds.regional_brand_name):: text) 
				   ELSE upper((bg.materialname):: text) END):: character varying AS global_product_brand, 
				   upper((mds.category):: text) AS global_product_category, 
				   NULL :: character varying AS sls_org, 
				   CASE WHEN ((bg.applicationid):: text = 'ID' :: text) THEN 'IDR' :: character varying 
						ELSE CASE WHEN ((bg.applicationid):: text = 'MY' :: text) THEN 'MYR' :: character varying 
						ELSE CASE WHEN ((bg.applicationid):: text = 'SG' :: text) THEN 'SGD' :: character varying 
						ELSE CASE WHEN ((bg.applicationid):: text = 'PH' :: text) THEN 'PHP' :: character varying 
				   ELSE sell.from_currency END END END END AS from_currency, 
				   'USD' :: character varying AS to_currecy, 
				   trunc((cur.exch_rate / (cur.from_ratio * cur.to_ratio)),5) AS exchange_rate, 
				   cur.from_ratio AS exrt_from_ratio, 
				   cur.to_ratio AS exrt_to_ratio, 
				   ((0):: numeric):: numeric(18, 0) AS sellout_sales_quantity, 
				   ((0):: numeric):: numeric(18, 0) AS sellout_sales_value, 
				   ((0):: numeric):: numeric(18, 0) AS sellout_sales_value_usd, 
				   ((0):: numeric):: numeric(18, 0) AS sellout_value_list_price, 
				   ((0):: numeric):: numeric(18, 0) AS sellout_value_list_price_usd, 
				   (right((bg.accountgroupcode):: text,6)):: character varying AS tpm_customer_cd, 
				   bg.accountgroupname AS tpm_customer_nm, 
				   (CASE WHEN (mds.prox_brand_code IS NOT NULL) THEN upper((mds.prox_brand_code):: text) ELSE upper((bg.materialcode):: text) END):: character varying AS tpm_brand_cd, 
				   (CASE WHEN (mds.prox_brand_name IS NOT NULL) THEN upper((mds.prox_brand_name):: text) ELSE upper((bg.materialname):: text) END):: character varying AS tpm_brand_nm, 
				   (upper((bg.channel):: text)):: character varying AS tpm_channel, 
				   NULL :: character varying AS tpm_sub_channel, 
				   upper((mds_cust.category):: text) AS customer_segmentation, 
				   (upper((bg.expensesubcategory):: text)):: character varying AS tpm_expensesubcategory, 
				   NULL :: character varying AS tpm_budgettype, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_budgetamount, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_used_budget, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_budgetbalance, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_ytdcommitment, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_ytgcommitment, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_commitment, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_penddingamount, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_paid, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_approvedpayment, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_pendingapprovalpayment, 
				   (bg.availabletopay):: numeric(38, 11) AS tpm_availabletopay, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_draftamount, 
				   bg.budgetowner AS tpm_budgetowner, 
				   (upper(trim((bg.customertype):: text))):: character varying AS tpm_customertype, 
				   bg.hqsoldtocode AS tpm_hqsoldtocode, 
				   bg.hqsoldtoname AS tpm_hqsoldtoname, 
				   bg.contractno AS tpm_contractno, 
				   bg.contracttempno AS tpm_contracttempno, 
				   bg.contracttitle AS tpm_contracttitle, 
				   bg.themecode AS tpm_themecode, 
				   bg.themename AS tpm_themename, 
				   bg.objective AS tpm_objective, 
				   bg.feespaid AS tpm_feespaid, 
				   bg.contractrevenuerecognitionstartdate AS tpm_contractrevenuerecognitionstartdate, 
				   bg.contractrevenuerecognitionenddate AS tpm_contractrevenuerecognitionenddate, 
				   bg.contractpromoexecutionstartdate AS tpm_contractpromoexecutionstartdate, 
				   bg.contractpromoexecutionenddate AS tpm_contractpromoexecutionenddate, 
				   bg.contractcreatedate AS tpm_contractcreatedate, 
				   bg.contractapprovaldate AS tpm_contractapprovaldate, 
				   bg.contractstatus AS tpm_contractstatus, 
				   bg.dateback AS tpm_dateback, 
				   bg.datebackreason AS tpm_datebackreason, 
				   bg.expenseid AS tpm_expenseid, 
				   bg.customercode AS tpm_contract_customercode, 
				   bg.customername AS tpm_contract_customername, 
				   bg.rebateno AS tpm_rebateno, 
				   bg.rebateactivityname AS tpm_rebateactivityname, 
				   bg.customercontractno AS tpm_customercontractno, 
				   bg.expenserevenuerecognitionstartdate AS tpm_expenserevenuerecognitionstartdate, 
				   bg.expenserevenuerecognitionenddate AS tpm_expenserevenuerecognitionenddate, 
				   bg.expensepromoexecutionstartdate AS tpm_expensepromoexecutionstartdate, 
				   bg.expensepromoexecutionenddate AS tpm_expensepromoexecutionenddate, 
				   bg.expenseclosed AS tpm_expenseclosed, 
				   bg.closeuser AS tpm_closeuser, 
				   bg.closetime AS tpm_closetime, 
				   bg.contracttype AS tpm_contracttype, 
				   bg.conditiontype AS tpm_conditiontype, 
				   bg.glaccount AS tpm_glaccount, 
				   bg.expensetypename AS tpm_expensetypename, 
				   bg.profitcenter AS tpm_profitcenter, 
				   bg.ppgcode AS tpm_ppgcode, 
				   bg.ppgname AS tpm_ppgname, 
				   (bg.rate):: character varying AS tpm_rate, 
				   bg.materialcode AS tpm_materialcode, 
				   bg.materialname AS tpm_materialname, 
				   bg.rtmchannel AS tpm_rtmchannel, 
				   bg.paymentmethod AS tpm_paymentmethod, 
				   (bg.expenseamount):: numeric(38, 11) AS tpm_expenseamount, 
				   (bg.commitmentamount):: numeric(38, 11) AS tpm_commitmentamount, 
				   (bg.accrualreleaseamountwithouttax):: numeric(38, 11) AS tpm_accrualreleaseamountwithouttax, 
				   (bg.closeamount):: numeric(38, 11) AS tpm_closeamount, 
				   (bg.paidamount):: numeric(38, 11) AS tpm_paidamount, 
				   (bg.approvedamount):: numeric(38, 11) AS tpm_approvedamount, 
				   (bg.unpaidamount):: numeric(38, 11) AS tpm_unpaidamount, 
				   ((bg.agingdays):: numeric):: numeric(18, 0) AS tpm_agingdays, 
				   bg.aging AS tpm_aging, 
				   bg.applicant AS tpm_applicant, 
				   bg.contractdescription AS tpm_contractdescription, 
				   bg.documentlink AS tpm_documentlink, 
				   bg.withattachment AS tpm_withattachment, 
				   (bg.dtsmarkuprate):: character varying AS tpm_dtsmarkuprate, 
				   NULL :: character varying AS tpm_paymentno, 
				   NULL :: character varying AS tpm_paymentstatus, 
				   NULL :: character varying AS tpm_paytocode, 
				   NULL :: character varying AS tpm_paytoname, 
				   NULL :: character varying AS tpm_paymenttitle, 
				   NULL :: character varying AS tpm_reverseno, 
				   NULL :: character varying AS tpm_oldreverseno, 
				   NULL :: character varying AS tpm_invoicenumber, 
				   NULL :: character varying AS tpm_invoicetype, 
				   NULL :: character varying AS tpm_sapdocnumber, 
				   NULL :: date AS tpm_sapdocdate, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_paymentamountwithouttax, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_invoiceamountwithouttax, 
				   NULL :: character varying AS tpm_vatcode, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_vatamount, 
				   NULL :: character varying AS tpm_whtcode, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_whtamount, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_amountpayable, 
				   NULL :: character varying AS tpm_supportingdocuments, 
				   NULL :: character varying AS tpm_currentapprovaluser, 
				   NULL :: character varying AS tpm_rejectreason, 
				   NULL :: character varying AS tpm_contractnotemp, 
				   NULL :: date AS tpm_paymentstartdate, 
				   NULL :: date AS tpm_paymentenddate, 
				   NULL :: character varying AS tpm_autoallocate, 
				   NULL :: character varying AS tpm_parked, 
				   NULL :: character varying AS tpm_payfromaccrual, 
				   NULL :: character varying AS tpm_accrualglaccount, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_contractoriginalamount, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_contractavailabletopay, 
				   (NULL :: numeric):: numeric(18, 0) AS tpm_plannedbalance, 
				   NULL :: character varying AS tpm_saprebateno, 
				   NULL :: character varying AS tpm_rebatesettlementno, 
				   NULL :: character varying AS tpm_sapcmno, 
				   NULL :: date AS tpm_sapcmdate, 
				   NULL :: character varying AS tpm_contractdetailstatus, 
				   NULL :: character varying AS tpm_createuser, 
				   NULL :: date AS tpm_createtime, 
				   NULL :: date AS tpm_applicantdate, 
				   NULL :: date AS tpm_approvedate, 
				   NULL :: date AS tpm_postingdate, 
				   NULL :: character varying AS tpm_postingperiod, 
				   NULL :: character varying AS tpm_fillingid, 
				   (NULL :: numeric):: numeric(18, 0) AS tpm_endtoendleadtime, 
				   (NULL :: numeric):: numeric(18, 0) AS tpm_salesinputleadtime, 
				   (NULL :: numeric):: numeric(18, 0) AS tpm_salesapprovalleadtime, 
				   NULL :: character varying AS tpm_mrc, 
				   NULL :: date AS tpm_printatddate, 
				   NULL :: character varying AS tpm_invoicenovat, 
				   NULL :: character varying AS tpm_invoicenowht, 
				   NULL :: character varying AS tpm_businesstaxcode, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_businesstaxamount, 
				   NULL :: character varying AS tpm_businesstax, 
				   ((0):: numeric):: numeric(18, 0) AS tpm_commitment_monthly, 
				   NULL :: character varying AS tpm_commitment_monthly_flag, 
				   ((0):: numeric):: numeric(18, 0) AS sellin_sales_quantity, 
				   ((0):: numeric):: numeric(18, 0) AS sellin_sales_value, 
				   ((0):: numeric):: numeric(18, 0) AS sellin_value_list_price 
			  FROM itg_prox_report_bi_contract bg LEFT JOIN edw_vw_os_time_dim cal 
				   ON to_date(bg.contractpromoexecutionstartdate) = cal.cal_date
				   LEFT JOIN cur ON (bg.applicationid):: text = (cur.cntry_key):: text
				   LEFT JOIN cb ON right((bg.accountgroupcode):: text,6) = right((cb.cust_num):: text,6)
				   LEFT JOIN sell ON right((bg.accountgroupcode):: text,6) = (sell.soldto_code):: text
				   LEFT JOIN mds ON upper((bg.materialname):: text) = upper((mds.prox_product_name):: text)
								 AND (bg.applicationid):: text = (mds.market):: text
				   LEFT JOIN mds_cust ON right((bg.accountgroupcode):: text,6) = (mds_cust.local_cust_code):: text
		  ) base
),
block3 as
(
	SELECT base.year, 
		   base.mnth_id, 
		   base.mnth_no, 
		   base.univ_year, 
		   base.univ_month, 
		   base.country_code, 
		   base.data_source, 
		   base.soldto_code, 
		   base.distributor_code, 
		   base.distributor_name, 
		   base.distributor_additional_attribute1, 
		   base.distributor_additional_attribute2, 
		   base.distributor_additional_attribute3, 
		   base.sap_parent_customer_key, 
		   base.sap_parent_customer_description, 
		   base.sap_customer_channel_key, 
		   base.sap_customer_channel_description, 
		   base.sap_customer_sub_channel_key, 
		   base.sap_sub_channel_description, 
		   base.sap_go_to_mdl_key, 
		   base.sap_go_to_mdl_description, 
		   base.sap_banner_key, 
		   base.sap_banner_description, 
		   base.sap_banner_format_key, 
		   base.sap_banner_format_description, 
		   base.retail_environment, 
		   base.customer_segment_key, 
		   NULL AS region, 
		   NULL AS zone_or_area, 
		   base.customer_segment_description, 
		   base.global_product_brand, 
		   NULL AS global_product_franchise, 
		   (base.global_product_category):: character varying AS global_product_category, 
		   NULL AS sls_org, 
		   base.from_currency, 
		   base.to_currecy, 
		   base.exchange_rate, 
		   base.exrt_from_ratio, 
		   base.exrt_to_ratio, 
		   base.sellout_sales_quantity, 
		   base.sellout_sales_value, 
		   (base.sellout_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellout_sales_value_usd, 
		   base.sellout_value_list_price, 
		   (base.sellout_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellout_value_list_price_usd, 
		   base.tpm_customer_cd, 
		   base.tpm_customer_nm, 
		   base.tpm_brand_cd, 
		   base.tpm_brand_nm, 
		   base.tpm_channel, 
		   base.tpm_sub_channel, 
		   NULL AS market_portfolio, 
		   (base.customer_segmentation):: character varying AS customer_segmentation, 
		   base.tpm_expensesubcategory, 
		   base.tpm_budgettype, 
		   base.tpm_budgetamount, 
		   base.tpm_used_budget, 
		   base.tpm_budgetbalance, 
		   base.tpm_ytdcommitment, 
		   base.tpm_ytgcommitment, 
		   base.tpm_commitment, 
		   base.tpm_penddingamount, 
		   base.tpm_paid, 
		   base.tpm_approvedpayment, 
		   base.tpm_pendingapprovalpayment, 
		   base.tpm_availabletopay, 
		   base.tpm_draftamount, 
		   base.tpm_budgetowner, 
		   (base.tpm_budgetamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetamount_usd, 
		   (base.tpm_used_budget * (base.exchange_rate):: numeric(38, 11)) AS tpm_used_budget_usd, 
		   (base.tpm_budgetbalance * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetbalance_usd, 
		   (base.tpm_ytdcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytdcommitment_usd, 
		   (base.tpm_ytgcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytgcommitment_usd, 
		   (base.tpm_commitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_usd, 
		   (base.tpm_penddingamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_penddingamount_usd, 
		   (base.tpm_paid * (base.exchange_rate):: numeric(38, 11)) AS tpm_paid_usd, 
		   (base.tpm_approvedpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_approvedpayment_usd, 
		   (base.tpm_pendingapprovalpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_pendingapprovalpayment_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS tpm_availabletopay_usd, 
		   (base.tpm_draftamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_draftamount_usd, 
		   base.tpm_customertype, 
		   base.tpm_hqsoldtocode, 
		   base.tpm_hqsoldtoname, 
		   base.tpm_contractno, 
		   base.tpm_contracttempno, 
		   base.tpm_contracttitle, 
		   base.tpm_themecode, 
		   base.tpm_themename, 
		   base.tpm_objective, 
		   base.tpm_feespaid, 
		   base.tpm_contractrevenuerecognitionstartdate, 
		   base.tpm_contractrevenuerecognitionenddate, 
		   base.tpm_contractpromoexecutionstartdate, 
		   base.tpm_contractpromoexecutionenddate, 
		   base.tpm_contractcreatedate, 
		   base.tpm_contractapprovaldate, 
		   base.tpm_contractstatus, 
		   base.tpm_dateback, 
		   base.tpm_datebackreason, 
		   base.tpm_expenseid, 
		   base.tpm_contract_customercode, 
		   base.tpm_contract_customername, 
		   base.tpm_rebateno, 
		   base.tpm_rebateactivityname, 
		   base.tpm_customercontractno, 
		   base.tpm_expenserevenuerecognitionstartdate, 
		   base.tpm_expenserevenuerecognitionenddate, 
		   base.tpm_expensepromoexecutionstartdate, 
		   base.tpm_expensepromoexecutionenddate, 
		   base.tpm_expenseclosed, 
		   base.tpm_closeuser, 
		   base.tpm_closetime, 
		   base.tpm_contracttype, 
		   base.tpm_conditiontype, 
		   base.tpm_glaccount, 
		   base.tpm_expensetypename, 
		   base.tpm_profitcenter, 
		   base.tpm_ppgcode, 
		   base.tpm_ppgname, 
		   base.tpm_rate, 
		   base.tpm_materialcode, 
		   base.tpm_materialname, 
		   base.tpm_rtmchannel, 
		   base.tpm_paymentmethod, 
		   base.tpm_expenseamount, 
		   base.tpm_commitmentamount, 
		   base.tpm_accrualreleaseamountwithouttax, 
		   base.tpm_closeamount, 
		   base.tpm_paidamount, 
		   base.tpm_approvedamount, 
		   base.tpm_unpaidamount, 
		   base.tpm_agingdays, 
		   base.tpm_aging, 
		   base.tpm_applicant, 
		   base.tpm_contractdescription, 
		   base.tpm_documentlink, 
		   base.tpm_withattachment, 
		   base.tpm_dtsmarkuprate, 
		   (base.tpm_expenseamount * (base.exchange_rate):: numeric(38, 11)) AS expenseamount_usd, 
		   (base.tpm_commitmentamount * (base.exchange_rate):: numeric(38, 11)) AS commitmentamount_usd, 
		   (base.tpm_accrualreleaseamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS accrualreleaseamountwithouttax_usd, 
		   (base.tpm_paidamount * (base.exchange_rate):: numeric(38, 11)) AS paidamount_usd, 
		   (base.tpm_approvedamount * (base.exchange_rate):: numeric(38, 11)) AS approvedamount_usd, 
		   (base.tpm_unpaidamount * (base.exchange_rate):: numeric(38, 11)) AS unpaidamount_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS availabletopay_usd, 
		   (base.tpm_closeamount * (base.exchange_rate):: numeric(38, 11)) AS closeamount_usd, 
		   base.tpm_paymentno, 
		   base.tpm_paymentstatus, 
		   base.tpm_paytocode, 
		   base.tpm_paytoname, 
		   base.tpm_paymenttitle, 
		   base.tpm_reverseno, 
		   base.tpm_oldreverseno, 
		   base.tpm_invoicenumber, 
		   base.tpm_invoicetype, 
		   base.tpm_sapdocnumber, 
		   base.tpm_sapdocdate, 
		   base.tpm_paymentamountwithouttax, 
		   base.tpm_invoiceamountwithouttax, 
		   base.tpm_vatcode, 
		   base.tpm_vatamount, 
		   base.tpm_whtcode, 
		   base.tpm_whtamount, 
		   base.tpm_amountpayable, 
		   base.tpm_supportingdocuments, 
		   base.tpm_currentapprovaluser, 
		   base.tpm_rejectreason, 
		   base.tpm_contractnotemp, 
		   base.tpm_paymentstartdate, 
		   base.tpm_paymentenddate, 
		   base.tpm_autoallocate, 
		   base.tpm_parked, 
		   base.tpm_payfromaccrual, 
		   base.tpm_accrualglaccount, 
		   base.tpm_contractoriginalamount, 
		   base.tpm_contractavailabletopay, 
		   base.tpm_plannedbalance, 
		   base.tpm_saprebateno, 
		   base.tpm_rebatesettlementno, 
		   base.tpm_sapcmno, 
		   base.tpm_sapcmdate, 
		   base.tpm_contractdetailstatus, 
		   base.tpm_createuser, 
		   base.tpm_createtime, 
		   base.tpm_applicantdate, 
		   base.tpm_approvedate, 
		   base.tpm_postingdate, 
		   base.tpm_postingperiod, 
		   base.tpm_fillingid, 
		   base.tpm_endtoendleadtime, 
		   base.tpm_salesinputleadtime, 
		   base.tpm_salesapprovalleadtime, 
		   base.tpm_mrc, 
		   base.tpm_printatddate, 
		   base.tpm_invoicenovat, 
		   base.tpm_invoicenowht, 
		   base.tpm_businesstaxcode, 
		   base.tpm_businesstaxamount, 
		   base.tpm_businesstax, 
		   (base.tpm_paymentamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS paymentamountwithouttax_usd, 
		   (base.tpm_invoiceamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS invoiceamountwithouttax_usd, 
		   (base.tpm_vatamount * (base.exchange_rate):: numeric(38, 11)) AS vatamount_usd, 
		   (base.tpm_whtamount * (base.exchange_rate):: numeric(38, 11)) AS whtamount_usd, 
		   (base.tpm_amountpayable * (base.exchange_rate):: numeric(38, 11)) AS amountpayable_usd, 
		   (base.tpm_contractoriginalamount * (base.exchange_rate):: numeric(38, 11)) AS contractoriginalamount_usd, 
		   (base.tpm_contractavailabletopay * (base.exchange_rate):: numeric(38, 11)) AS contractavailabletopay_usd, 
		   (base.tpm_plannedbalance * (base.exchange_rate):: numeric(38, 11)) AS plannedbalance_usd, 
		   (base.tpm_businesstaxamount * (base.exchange_rate):: numeric(38, 11)) AS businesstaxamount_usd, 
		   base.tpm_commitment_monthly, 
		   (base.tpm_commitment_monthly * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_monthly_usd, 
		   base.tpm_commitment_monthly_flag, 
		   base.sellin_sales_quantity, 
		   base.sellin_sales_value, 
		   (base.sellin_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellin_sales_value_usd, 
		   base.sellin_value_list_price, 
		   (base.sellin_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellin_value_list_price_usd, 
		   CASE WHEN ((base.country_code):: text = 'ID' :: text) THEN 'Indonesia' :: character varying 
				WHEN ((base.country_code):: text = 'SG' :: text) THEN 'Singapore' :: character varying 
				WHEN ((base.country_code):: text = 'MY' :: text) THEN 'Malaysia' :: character varying 
				WHEN ((base.country_code):: text = 'PH' :: text) THEN 'Philippines' :: character varying 
		   ELSE base.country_code END AS country_name, 
		   to_date((base.mnth_id):: text,'YYYYMM' :: text) AS dm_date 
		 FROM 
			(SELECT 
				(bg.budgetyear):: character varying AS year, 
				(cal.mnth_id):: character varying AS mnth_id, 
				(cal.mnth_no):: character varying AS mnth_no, 
				(bg.budgetyear):: character varying AS univ_year, 
				(cal.cal_mnth_no):: character varying AS univ_month, 
				bg.applicationid AS country_code, 
				'PRO-X PAYMENT' :: character varying AS data_source, 
				(right((bg.accountgroupcode):: text,6)):: character varying AS soldto_code, 
				(right((bg.accountgroupcode):: text,6)):: character varying AS distributor_code, 
				cb.cust_nm AS distributor_name, 
				NULL :: character varying AS distributor_additional_attribute1, 
				NULL :: character varying AS distributor_additional_attribute2, 
				NULL :: character varying AS distributor_additional_attribute3, 
				(upper((sell.sap_parent_customer_key):: text)):: character varying AS sap_parent_customer_key, 
				(upper((sell.sap_parent_customer_description):: text)):: character varying AS sap_parent_customer_description, 
				(upper((sell.sap_customer_channel_key):: text)):: character varying AS sap_customer_channel_key, 
				(upper((sell.sap_customer_channel_description):: text)):: character varying AS sap_customer_channel_description, 
				(upper((sell.sap_customer_sub_channel_key):: text)):: character varying AS sap_customer_sub_channel_key, 
				(upper((sell.sap_sub_channel_description):: text)):: character varying AS sap_sub_channel_description, 
				(upper((sell.sap_go_to_mdl_key):: text)):: character varying AS sap_go_to_mdl_key, 
				(upper((sell.sap_go_to_mdl_description):: text)):: character varying AS sap_go_to_mdl_description, 
				(upper((sell.sap_banner_key):: text)):: character varying AS sap_banner_key, 
				(upper((sell.sap_banner_description):: text)):: character varying AS sap_banner_description, 
				(upper((sell.sap_banner_format_key):: text)):: character varying AS sap_banner_format_key, 
				(upper((sell.sap_banner_format_description):: text)):: character varying AS sap_banner_format_description, 
				(upper((sell.retail_environment):: text)):: character varying AS retail_environment, 
				(upper((sell.customer_segment_key):: text)):: character varying AS customer_segment_key, 
				(upper((sell.customer_segment_description):: text)):: character varying AS customer_segment_description, 
				(CASE WHEN (mds.regional_brand_name IS NOT NULL) THEN upper((mds.regional_brand_name):: text) 
				ELSE upper((bg.materialname):: text) END):: character varying AS global_product_brand, 
				upper((mds.category):: text) AS global_product_category, 
				NULL :: character varying AS sls_org, 
				CASE WHEN ((bg.applicationid):: text = 'ID' :: text) THEN 'IDR' :: character varying 
					 ELSE CASE WHEN ((bg.applicationid):: text = 'MY' :: text) THEN 'MYR' :: character varying 
					 ELSE CASE WHEN ((bg.applicationid):: text = 'SG' :: text) THEN 'SGD' :: character varying 
					 ELSE CASE WHEN ((bg.applicationid):: text = 'PH' :: text) THEN 'PHP' :: character varying 
				ELSE sell.from_currency END END END END AS from_currency, 
				'USD' :: character varying AS to_currecy, 
				trunc((cur.exch_rate / (cur.from_ratio * cur.to_ratio)),5) AS exchange_rate, 
				cur.from_ratio AS exrt_from_ratio, 
				cur.to_ratio AS exrt_to_ratio, 
				((0):: numeric):: numeric(18, 0) AS sellout_sales_quantity, 
				((0):: numeric):: numeric(18, 0) AS sellout_sales_value, 
				((0):: numeric):: numeric(18, 0) AS sellout_sales_value_usd, 
				((0):: numeric):: numeric(18, 0) AS sellout_value_list_price, 
				((0):: numeric):: numeric(18, 0) AS sellout_value_list_price_usd, 
				(right((bg.accountgroupcode):: text,6)):: character varying AS tpm_customer_cd, 
				(upper((bg.accountgroupname):: text)):: character varying AS tpm_customer_nm, 
				(CASE WHEN (mds.prox_brand_code IS NOT NULL) THEN upper((mds.prox_brand_code):: text) ELSE upper((bg.materialcode):: text) END):: character varying AS tpm_brand_cd, 
				(CASE WHEN (mds.prox_brand_name IS NOT NULL) THEN upper((mds.prox_brand_name):: text) ELSE upper((bg.materialname):: text) END):: character varying AS tpm_brand_nm, 
				(upper((bg.channel):: text)):: character varying AS tpm_channel, 
				NULL :: character varying AS tpm_sub_channel, 
				upper((mds_cust.category):: text) AS customer_segmentation, 
				(upper((bg.expensesubcategory):: text)):: character varying AS tpm_expensesubcategory, 
				NULL :: character varying AS tpm_budgettype, 
				((0):: numeric):: numeric(18, 0) AS tpm_budgetamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_used_budget, 
				((0):: numeric):: numeric(18, 0) AS tpm_budgetbalance, 
				((0):: numeric):: numeric(18, 0) AS tpm_ytdcommitment, 
				((0):: numeric):: numeric(18, 0) AS tpm_ytgcommitment, 
				((0):: numeric):: numeric(18, 0) AS tpm_commitment, 
				((0):: numeric):: numeric(18, 0) AS tpm_penddingamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_paid, 
				((0):: numeric):: numeric(18, 0) AS tpm_approvedpayment, 
				((0):: numeric):: numeric(18, 0) AS tpm_pendingapprovalpayment, 
				((0):: numeric):: numeric(18, 0) AS tpm_availabletopay, 
				((0):: numeric):: numeric(18, 0) AS tpm_draftamount, 
				bg.budgetowner AS tpm_budgetowner, 
				(ct.customertype):: character varying AS tpm_customertype, 
				NULL :: character varying AS tpm_hqsoldtocode, 
				NULL :: character varying AS tpm_hqsoldtoname, 
				bg.contractno AS tpm_contractno, 
				NULL :: character varying AS tpm_contracttempno, 
				NULL :: character varying AS tpm_contracttitle, 
				bg.themecode AS tpm_themecode, 
				bg.themename AS tpm_themename, 
				NULL :: character varying AS tpm_objective, 
				NULL :: character varying AS tpm_feespaid, 
				NULL :: date AS tpm_contractrevenuerecognitionstartdate, 
				NULL :: date AS tpm_contractrevenuerecognitionenddate, 
				NULL :: date AS tpm_contractpromoexecutionstartdate, 
				NULL :: date AS tpm_contractpromoexecutionenddate, 
				NULL :: date AS tpm_contractcreatedate, 
				NULL :: date AS tpm_contractapprovaldate, 
				bg.contractstatus AS tpm_contractstatus, 
				NULL :: character varying AS tpm_dateback, 
				NULL :: character varying AS tpm_datebackreason, 
				bg.expenseid AS tpm_expenseid, 
				NULL :: character varying AS tpm_contract_customercode, 
				NULL :: character varying AS tpm_contract_customername, 
				NULL :: character varying AS tpm_rebateno, 
				NULL :: character varying AS tpm_rebateactivityname, 
				NULL :: character varying AS tpm_customercontractno, 
				bg.expenserevenuerecognitionstartdate AS tpm_expenserevenuerecognitionstartdate, 
				bg.expenserevenuerecognitionenddate AS tpm_expenserevenuerecognitionenddate, 
				bg.expensepromoexecutionstartdate AS tpm_expensepromoexecutionstartdate, 
				bg.expensepromoexecutionenddate AS tpm_expensepromoexecutionenddate, 
				NULL :: character varying AS tpm_expenseclosed, 
				NULL :: character varying AS tpm_closeuser, 
				NULL :: date AS tpm_closetime, 
				NULL :: character varying AS tpm_contracttype, 
				NULL :: character varying AS tpm_conditiontype, 
				bg.glaccount AS tpm_glaccount, 
				bg.expensetypename AS tpm_expensetypename, 
				bg.profitcenter AS tpm_profitcenter, 
				NULL :: character varying AS tpm_ppgcode, 
				NULL :: character varying AS tpm_ppgname, 
				NULL :: character varying AS tpm_rate, 
				bg.materialcode AS tpm_materialcode, 
				bg.materialname AS tpm_materialname, 
				bg.rtmchannel AS tpm_rtmchannel, 
				bg.paymentmethod AS tpm_paymentmethod, 
				((0):: numeric):: numeric(18, 0) AS tpm_expenseamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_commitmentamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_accrualreleaseamountwithouttax, 
				((0):: numeric):: numeric(18, 0) AS tpm_closeamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_paidamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_approvedamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_unpaidamount, 
				((0):: numeric):: numeric(18, 0) AS tpm_agingdays, 
				NULL :: character varying AS tpm_aging, 
				bg.applicant AS tpm_applicant, 
				NULL :: character varying AS tpm_contractdescription, 
				NULL :: character varying AS tpm_documentlink, 
				NULL :: character varying AS tpm_withattachment, 
				NULL :: character varying AS tpm_dtsmarkuprate, 
				bg.paymentno AS tpm_paymentno, 
				bg.paymentstatus AS tpm_paymentstatus, 
				bg.paytocode AS tpm_paytocode, 
				bg.paytoname AS tpm_paytoname, 
				bg.paymenttitle AS tpm_paymenttitle, 
				bg.reverseno AS tpm_reverseno, 
				bg.oldreverseno AS tpm_oldreverseno, 
				bg.invoicenumber AS tpm_invoicenumber, 
				bg.invoicetype AS tpm_invoicetype, 
				bg.sapdocnumber AS tpm_sapdocnumber, 
				bg.sapdocdate AS tpm_sapdocdate, 
				(bg.paymentamountwithouttax):: numeric(38, 11) AS tpm_paymentamountwithouttax, 
				(bg.invoiceamountwithouttax):: numeric(38, 11) AS tpm_invoiceamountwithouttax, 
				bg.vatcode AS tpm_vatcode, 
				(bg.vatamount):: numeric(38, 11) AS tpm_vatamount, 
				bg.whtcode AS tpm_whtcode, 
				(bg.whtamount):: numeric(38, 11) AS tpm_whtamount, 
				(bg.amountpayable):: numeric(38, 11) AS tpm_amountpayable, 
				bg.supportingdocuments AS tpm_supportingdocuments, 
				bg.currentapprovaluser AS tpm_currentapprovaluser, 
				bg.rejectreason AS tpm_rejectreason, 
				bg.contractnotemp AS tpm_contractnotemp, 
				bg.paymentstartdate AS tpm_paymentstartdate, 
				bg.paymentenddate AS tpm_paymentenddate, 
				bg.autoallocate AS tpm_autoallocate, 
				bg.parked AS tpm_parked, 
				bg.payfromaccrual AS tpm_payfromaccrual, 
				bg.accrualglaccount AS tpm_accrualglaccount, 
				(bg.contractoriginalamount):: numeric(38, 11) AS tpm_contractoriginalamount, 
				(bg.contractavailabletopay):: numeric(38, 11) AS tpm_contractavailabletopay, 
				(bg.plannedbalance):: numeric(38, 11) AS tpm_plannedbalance, 
				bg.saprebateno AS tpm_saprebateno, 
				bg.rebatesettlementno AS tpm_rebatesettlementno, 
				bg.sapcmno AS tpm_sapcmno, 
				bg.sapcmdate AS tpm_sapcmdate, 
				bg.contractdetailstatus AS tpm_contractdetailstatus, 
				bg.createuser AS tpm_createuser, 
				bg.createtime AS tpm_createtime, 
				bg.applicantdate AS tpm_applicantdate, 
				bg.approvedate AS tpm_approvedate, 
				bg.postingdate AS tpm_postingdate, 
				bg.postingperiod AS tpm_postingperiod, 
				bg.fillingid AS tpm_fillingid, 
				((bg.endtoendleadtime):: numeric):: numeric(18, 0) AS tpm_endtoendleadtime, 
				((bg.salesinputleadtime):: numeric):: numeric(18, 0) AS tpm_salesinputleadtime, 
				((bg.salesapprovalleadtime):: numeric):: numeric(18, 0) AS tpm_salesapprovalleadtime, 
				bg.mrc AS tpm_mrc, 
				bg.printatddate AS tpm_printatddate, 
				bg.invoicenovat AS tpm_invoicenovat, 
				bg.invoicenowht AS tpm_invoicenowht, 
				bg.businesstaxcode AS tpm_businesstaxcode, 
				(bg.businesstaxamount):: numeric(38, 11) AS tpm_businesstaxamount, 
				bg.businesstax AS tpm_businesstax, 
				((0):: numeric):: numeric(18, 0) AS tpm_commitment_monthly, 
				((0):: numeric):: numeric(18, 0) AS tpm_commitment_monthly_usd, 
				NULL :: character varying AS tpm_commitment_monthly_flag, 
				((0):: numeric):: numeric(18, 0) AS sellin_sales_quantity, 
				((0):: numeric):: numeric(18, 0) AS sellin_sales_value, 
				((0):: numeric):: numeric(18, 0) AS sellin_sales_value_usd, 
				((0):: numeric):: numeric(18, 0) AS sellin_value_list_price, 
				((0):: numeric):: numeric(18, 0) AS sellin_value_list_price_usd 
			  FROM itg_prox_report_bi_payment bg LEFT JOIN edw_vw_os_time_dim cal 
				   ON to_date(bg.paymentstartdate) = cal.cal_date
				   LEFT JOIN budget ON (bg.materialcode):: text = (budget.brandcode):: text
				   LEFT JOIN cur ON (bg.applicationid):: text = (cur.cntry_key):: text
				   LEFT JOIN ct ON right((bg.accountgroupcode):: text,6) = right(ct.accountgroupcode, 6)
				   LEFT JOIN cb ON right((bg.accountgroupcode):: text,6) = right((cb.cust_num):: text,6)
				   LEFT JOIN sell ON right((bg.accountgroupcode):: text,6) = (sell.soldto_code):: text
				   LEFT JOIN mds ON upper((bg.materialname):: text) = upper((mds.prox_product_name):: text)
								 AND (bg.applicationid):: text = (mds.market):: text
				   LEFT JOIN mds_cust ON right((bg.accountgroupcode):: text,6) = (mds_cust.local_cust_code):: text
			) base
),
block4 as
(
	SELECT base.year, 
		   base.mnth_id, 
		   base.mnth_no, 
		   base.univ_year, 
		   base.univ_month, 
		   base.country_code, 
		   base.data_source, 
		   base.soldto_code, 
		   base.distributor_code, 
		   base.distributor_name, 
		   base.distributor_additional_attribute1, 
		   base.distributor_additional_attribute2, 
		   base.distributor_additional_attribute3, 
		   base.sap_parent_customer_key, 
		   base.sap_parent_customer_description, 
		   base.sap_customer_channel_key, 
		   base.sap_customer_channel_description, 
		   base.sap_customer_sub_channel_key, 
		   base.sap_sub_channel_description, 
		   base.sap_go_to_mdl_key, 
		   base.sap_go_to_mdl_description, 
		   base.sap_banner_key, 
		   base.sap_banner_description, 
		   base.sap_banner_format_key, 
		   base.sap_banner_format_description, 
		   base.retail_environment, 
		   base.customer_segment_key, 
		   NULL AS region, 
		   NULL AS zone_or_area, 
		   base.customer_segment_description, 
		   base.global_product_brand, 
		   NULL AS global_product_franchise, 
		   (base.global_product_category):: character varying AS global_product_category, 
		   NULL AS sls_org, 
		   base.from_currency, 
		   base.to_currecy, 
		   base.exchange_rate, 
		   base.exrt_from_ratio, 
		   base.exrt_to_ratio, 
		   base.sellout_sales_quantity, 
		   base.sellout_sales_value, 
		   (base.sellout_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellout_sales_value_usd, 
		   base.sellout_value_list_price, 
		   (base.sellout_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellout_value_list_price_usd, 
		   base.tpm_customer_cd, 
		   base.tpm_customer_nm, 
		   base.tpm_brand_cd, 
		   base.tpm_brand_nm, 
		   base.tpm_channel, 
		   base.tpm_sub_channel, 
		   NULL AS market_portfolio, 
		   (base.customer_segmentation):: character varying AS customer_segmentation, 
		   base.tpm_expensesubcategory, 
		   base.tpm_budgettype, 
		   base.tpm_budgetamount, 
		   base.tpm_used_budget, 
		   base.tpm_budgetbalance, 
		   base.tpm_ytdcommitment, 
		   base.tpm_ytgcommitment, 
		   base.tpm_commitment, 
		   base.tpm_penddingamount, 
		   base.tpm_paid, 
		   base.tpm_approvedpayment, 
		   base.tpm_pendingapprovalpayment, 
		   base.tpm_availabletopay, 
		   base.tpm_draftamount, 
		   base.tpm_budgetowner, 
		   (base.tpm_budgetamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetamount_usd, 
		   (base.tpm_used_budget * (base.exchange_rate):: numeric(38, 11)) AS tpm_used_budget_usd, 
		   (base.tpm_budgetbalance * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetbalance_usd, 
		   (base.tpm_ytdcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytdcommitment_usd, 
		   (base.tpm_ytgcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytgcommitment_usd, 
		   (base.tpm_commitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_usd, 
		   (base.tpm_penddingamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_penddingamount_usd, 
		   (base.tpm_paid * (base.exchange_rate):: numeric(38, 11)) AS tpm_paid_usd, 
		   (base.tpm_approvedpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_approvedpayment_usd, 
		   (base.tpm_pendingapprovalpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_pendingapprovalpayment_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS tpm_availabletopay_usd, 
		   (base.tpm_draftamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_draftamount_usd, 
		   base.tpm_customertype, 
		   base.tpm_hqsoldtocode, 
		   base.tpm_hqsoldtoname, 
		   base.tpm_contractno, 
		   base.tpm_contracttempno, 
		   base.tpm_contracttitle, 
		   base.tpm_themecode, 
		   base.tpm_themename, 
		   base.tpm_objective, 
		   base.tpm_feespaid, 
		   base.tpm_contractrevenuerecognitionstartdate, 
		   base.tpm_contractrevenuerecognitionenddate, 
		   base.tpm_contractpromoexecutionstartdate, 
		   base.tpm_contractpromoexecutionenddate, 
		   base.tpm_contractcreatedate, 
		   base.tpm_contractapprovaldate, 
		   base.tpm_contractstatus, 
		   base.tpm_dateback, 
		   base.tpm_datebackreason, 
		   base.tpm_expenseid, 
		   base.tpm_contract_customercode, 
		   base.tpm_contract_customername, 
		   base.tpm_rebateno, 
		   base.tpm_rebateactivityname, 
		   base.tpm_customercontractno, 
		   base.tpm_expenserevenuerecognitionstartdate, 
		   base.tpm_expenserevenuerecognitionenddate, 
		   base.tpm_expensepromoexecutionstartdate, 
		   base.tpm_expensepromoexecutionenddate, 
		   base.tpm_expenseclosed, 
		   base.tpm_closeuser, 
		   base.tpm_closetime, 
		   base.tpm_contracttype, 
		   base.tpm_conditiontype, 
		   base.tpm_glaccount, 
		   base.tpm_expensetypename, 
		   base.tpm_profitcenter, 
		   base.tpm_ppgcode, 
		   base.tpm_ppgname, 
		   base.tpm_rate, 
		   base.tpm_materialcode, 
		   base.tpm_materialname, 
		   base.tpm_rtmchannel, 
		   base.tpm_paymentmethod, 
		   base.tpm_expenseamount, 
		   base.tpm_commitmentamount, 
		   base.tpm_accrualreleaseamountwithouttax, 
		   base.tpm_closeamount, 
		   base.tpm_paidamount, 
		   base.tpm_approvedamount, 
		   base.tpm_unpaidamount, 
		   base.tpm_agingdays, 
		   base.tpm_aging, 
		   base.tpm_applicant, 
		   base.tpm_contractdescription, 
		   base.tpm_documentlink, 
		   base.tpm_withattachment, 
		   base.tpm_dtsmarkuprate, 
		   (base.tpm_expenseamount * (base.exchange_rate):: numeric(38, 11)) AS expenseamount_usd, 
		   (base.tpm_commitmentamount * (base.exchange_rate):: numeric(38, 11)) AS commitmentamount_usd, 
		   (base.tpm_accrualreleaseamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS accrualreleaseamountwithouttax_usd, 
		   (base.tpm_paidamount * (base.exchange_rate):: numeric(38, 11)) AS paidamount_usd, 
		   (base.tpm_approvedamount * (base.exchange_rate):: numeric(38, 11)) AS approvedamount_usd, 
		   (base.tpm_unpaidamount * (base.exchange_rate):: numeric(38, 11)) AS unpaidamount_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS availabletopay_usd, 
		   (base.tpm_closeamount * (base.exchange_rate):: numeric(38, 11)) AS closeamount_usd, 
		   base.tpm_paymentno, 
		   base.tpm_paymentstatus, 
		   base.tpm_paytocode, 
		   base.tpm_paytoname, 
		   base.tpm_paymenttitle, 
		   base.tpm_reverseno, 
		   base.tpm_oldreverseno, 
		   base.tpm_invoicenumber, 
		   base.tpm_invoicetype, 
		   base.tpm_sapdocnumber, 
		   base.tpm_sapdocdate, 
		   base.tpm_paymentamountwithouttax, 
		   base.tpm_invoiceamountwithouttax, 
		   base.tpm_vatcode, 
		   base.tpm_vatamount, 
		   base.tpm_whtcode, 
		   base.tpm_whtamount, 
		   base.tpm_amountpayable, 
		   base.tpm_supportingdocuments, 
		   base.tpm_currentapprovaluser, 
		   base.tpm_rejectreason, 
		   base.tpm_contractnotemp, 
		   base.tpm_paymentstartdate, 
		   base.tpm_paymentenddate, 
		   base.tpm_autoallocate, 
		   base.tpm_parked, 
		   base.tpm_payfromaccrual, 
		   base.tpm_accrualglaccount, 
		   base.tpm_contractoriginalamount, 
		   base.tpm_contractavailabletopay, 
		   base.tpm_plannedbalance, 
		   base.tpm_saprebateno, 
		   base.tpm_rebatesettlementno, 
		   base.tpm_sapcmno, 
		   base.tpm_sapcmdate, 
		   base.tpm_contractdetailstatus, 
		   base.tpm_createuser, 
		   base.tpm_createtime, 
		   base.tpm_applicantdate, 
		   base.tpm_approvedate, 
		   base.tpm_postingdate, 
		   base.tpm_postingperiod, 
		   base.tpm_fillingid, 
		   base.tpm_endtoendleadtime, 
		   base.tpm_salesinputleadtime, 
		   base.tpm_salesapprovalleadtime, 
		   base.tpm_mrc, 
		   base.tpm_printatddate, 
		   base.tpm_invoicenovat, 
		   base.tpm_invoicenowht, 
		   base.tpm_businesstaxcode, 
		   base.tpm_businesstaxamount, 
		   base.tpm_businesstax, 
		   (base.tpm_paymentamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS paymentamountwithouttax_usd, 
		   (base.tpm_invoiceamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS invoiceamountwithouttax_usd, 
		   (base.tpm_vatamount * (base.exchange_rate):: numeric(38, 11)) AS vatamount_usd, 
		   (base.tpm_whtamount * (base.exchange_rate):: numeric(38, 11)) AS whtamount_usd, 
		   (base.tpm_amountpayable * (base.exchange_rate):: numeric(38, 11)) AS amountpayable_usd, 
		   (base.tpm_contractoriginalamount * (base.exchange_rate):: numeric(38, 11)) AS contractoriginalamount_usd, 
		   (base.tpm_contractavailabletopay * (base.exchange_rate):: numeric(38, 11)) AS contractavailabletopay_usd, 
		   (base.tpm_plannedbalance * (base.exchange_rate):: numeric(38, 11)) AS plannedbalance_usd, 
		   (base.tpm_businesstaxamount * (base.exchange_rate):: numeric(38, 11)) AS businesstaxamount_usd, 
		   base.tpm_commitment_monthly, 
		   (base.tpm_commitment_monthly * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_monthly_usd, 
		   base.tpm_commitment_monthly_flag, 
		   base.sellin_sales_quantity, 
		   base.sellin_sales_value, 
		   (base.sellin_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellin_sales_value_usd, 
		   base.sellin_value_list_price, 
		   (base.sellin_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellin_value_list_price_usd, 
		   CASE WHEN ((base.country_code):: text = 'ID' :: text) THEN 'Indonesia' :: character varying 
				WHEN ((base.country_code):: text = 'SG' :: text) THEN 'Singapore' :: character varying 
				WHEN ((base.country_code):: text = 'MY' :: text) THEN 'Malaysia' :: character varying 
				WHEN ((base.country_code):: text = 'PH' :: text) THEN 'Philippines' :: character varying 
		   ELSE base.country_code END AS country_name, 
		   to_date((base.mnth_id):: text,'YYYYMM' :: text) AS dm_date 
		FROM 
		  (SELECT 
			  (bg.year):: character varying AS year, 
			  (((bg.year):: text || lpad((bg.expensemonth):: text,2,(0):: text))):: character varying AS mnth_id, 
			  (bg.expensemonth):: character varying AS mnth_no, 
			  (bg.year):: character varying AS univ_year, 
			  (bg.expensemonth):: character varying AS univ_month, 
			  bg.applicationid AS country_code, 
			  'PRO-X COMMITMENT' :: character varying AS data_source, 
			  (right((bg.accountgroupcode):: text,6)):: character varying AS soldto_code, 
			  (right((bg.accountgroupcode):: text,6)):: character varying AS distributor_code, 
			  cb.cust_nm AS distributor_name, 
			  NULL :: character varying AS distributor_additional_attribute1, 
			  NULL :: character varying AS distributor_additional_attribute2, 
			  NULL :: character varying AS distributor_additional_attribute3, 
			  (upper((sell.sap_parent_customer_key):: text)):: character varying AS sap_parent_customer_key, 
			  (upper((sell.sap_parent_customer_description):: text)):: character varying AS sap_parent_customer_description, 
			  (upper((sell.sap_customer_channel_key):: text)):: character varying AS sap_customer_channel_key, 
			  (upper((sell.sap_customer_channel_description):: text)):: character varying AS sap_customer_channel_description, 
			  (upper((sell.sap_customer_sub_channel_key):: text)):: character varying AS sap_customer_sub_channel_key, 
			  (upper((sell.sap_sub_channel_description):: text)):: character varying AS sap_sub_channel_description, 
			  (upper((sell.sap_go_to_mdl_key):: text)):: character varying AS sap_go_to_mdl_key, 
			  (upper((sell.sap_go_to_mdl_description):: text)):: character varying AS sap_go_to_mdl_description, 
			  (upper((sell.sap_banner_key):: text)):: character varying AS sap_banner_key, 
			  (upper((sell.sap_banner_description):: text)):: character varying AS sap_banner_description, 
			  (upper((sell.sap_banner_format_key):: text)):: character varying AS sap_banner_format_key, 
			  (upper((sell.sap_banner_format_description):: text)):: character varying AS sap_banner_format_description, 
			  (upper((sell.retail_environment):: text)):: character varying AS retail_environment, 
			  (upper((sell.customer_segment_key):: text)):: character varying AS customer_segment_key, 
			  (upper((sell.customer_segment_description):: text)):: character varying AS customer_segment_description, 
			  (CASE WHEN (mds.regional_brand_name IS NOT NULL) THEN upper((mds.regional_brand_name):: text) ELSE upper((bg.materialname):: text) END):: character varying AS global_product_brand, 
			  upper((mds.category):: text) AS global_product_category, 
			  NULL :: character varying AS sls_org, 
			  CASE WHEN ((bg.applicationid):: text = 'ID' :: text) THEN 'IDR' :: character varying 
				   ELSE CASE WHEN ((bg.applicationid):: text = 'MY' :: text) THEN 'MYR' :: character varying 
				   ELSE CASE WHEN ((bg.applicationid):: text = 'SG' :: text) THEN 'SGD' :: character varying 
				   ELSE CASE WHEN ((bg.applicationid):: text = 'PH' :: text) THEN 'PHP' :: character varying 
			  ELSE sell.from_currency END END END END AS from_currency, 
			  'USD' :: character varying AS to_currecy, 
			  trunc((cur.exch_rate / (cur.from_ratio * cur.to_ratio)),5) AS exchange_rate, 
			  cur.from_ratio AS exrt_from_ratio, 
			  cur.to_ratio AS exrt_to_ratio, 
			  ((0):: numeric):: numeric(18, 0) AS sellout_sales_quantity, 
			  ((0):: numeric):: numeric(18, 0) AS sellout_sales_value, 
			  ((0):: numeric):: numeric(18, 0) AS sellout_sales_value_usd, 
			  ((0):: numeric):: numeric(18, 0) AS sellout_value_list_price, 
			  ((0):: numeric):: numeric(18, 0) AS sellout_value_list_price_usd, 
			  (right((bg.accountgroupcode):: text,6)):: character varying AS tpm_customer_cd, 
			  (upper((bg.accountgroupname):: text)):: character varying AS tpm_customer_nm, 
			  (CASE WHEN (mds.prox_brand_code IS NOT NULL) THEN upper((mds.prox_brand_code):: text) ELSE upper((bg.materialcode):: text) END):: character varying AS tpm_brand_cd, 
			  (CASE WHEN (mds.prox_brand_name IS NOT NULL) THEN upper((mds.prox_brand_name):: text) ELSE upper((bg.materialname):: text) END):: character varying AS tpm_brand_nm, 
			  (upper((bg.channel):: text)):: character varying AS tpm_channel, 
			  NULL :: character varying AS tpm_sub_channel, 
			  upper((mds_cust.category):: text) AS customer_segmentation, 
			  (upper((bg.expensesubcategory):: text)):: character varying AS tpm_expensesubcategory, 
			  NULL :: character varying AS tpm_budgettype, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_budgetamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_used_budget, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_budgetbalance, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_ytdcommitment, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_ytgcommitment, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_commitment, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_penddingamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_paid, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_approvedpayment, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_pendingapprovalpayment, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_availabletopay, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_draftamount, 
			  bg.budgetowner AS tpm_budgetowner, 
			  (upper(trim((bg.customertype):: text))):: character varying AS tpm_customertype, 
			  bg.hqsoldtocode AS tpm_hqsoldtocode, 
			  bg.hqsoldtoname AS tpm_hqsoldtoname, 
			  bg.contractno AS tpm_contractno, 
			  bg.contracttempno AS tpm_contracttempno, 
			  bg.contracttitle AS tpm_contracttitle, 
			  bg.themecode AS tpm_themecode, 
			  bg.themename AS tpm_themename, 
			  bg.objective AS tpm_objective, 
			  bg.feespaid AS tpm_feespaid, 
			  bg.contractrevenuerecognitionstartdate AS tpm_contractrevenuerecognitionstartdate, 
			  bg.contractrevenuerecognitionenddate AS tpm_contractrevenuerecognitionenddate, 
			  bg.contractpromoexecutionstartdate AS tpm_contractpromoexecutionstartdate, 
			  bg.contractpromoexecutionenddate AS tpm_contractpromoexecutionenddate, 
			  bg.contractcreatedate AS tpm_contractcreatedate, 
			  bg.contractapprovaldate AS tpm_contractapprovaldate, 
			  bg.contractstatus AS tpm_contractstatus, 
			  bg.dateback AS tpm_dateback, 
			  bg.datebackreason AS tpm_datebackreason, 
			  bg.expenseid AS tpm_expenseid, 
			  bg.customercode AS tpm_contract_customercode, 
			  bg.customername AS tpm_contract_customername, 
			  bg.rebateno AS tpm_rebateno, 
			  bg.rebateactivityname AS tpm_rebateactivityname, 
			  bg.customercontractno AS tpm_customercontractno, 
			  bg.expenserevenuerecognitionstartdate AS tpm_expenserevenuerecognitionstartdate, 
			  bg.expenserevenuerecognitionenddate AS tpm_expenserevenuerecognitionenddate, 
			  bg.expensepromoexecutionstartdate AS tpm_expensepromoexecutionstartdate, 
			  bg.expensepromoexecutionenddate AS tpm_expensepromoexecutionenddate, 
			  bg.expenseclosed AS tpm_expenseclosed, 
			  bg.closeuser AS tpm_closeuser, 
			  bg.closetime AS tpm_closetime, 
			  bg.contracttype AS tpm_contracttype, 
			  bg.conditiontype AS tpm_conditiontype, 
			  bg.glaccount AS tpm_glaccount, 
			  bg.expensetypename AS tpm_expensetypename, 
			  bg.profitcenter AS tpm_profitcenter, 
			  bg.ppgcode AS tpm_ppgcode, 
			  bg.ppgname AS tpm_ppgname, 
			  (bg.rate):: character varying AS tpm_rate, 
			  bg.materialcode AS tpm_materialcode, 
			  bg.materialname AS tpm_materialname, 
			  bg.rtmchannel AS tpm_rtmchannel, 
			  bg.paymentmethod AS tpm_paymentmethod, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_expenseamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_commitmentamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_accrualreleaseamountwithouttax, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_closeamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_paidamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_approvedamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_unpaidamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_agingdays, 
			  bg.aging AS tpm_aging, 
			  bg.applicant AS tpm_applicant, 
			  bg.contractdescription AS tpm_contractdescription, 
			  bg.documentlink AS tpm_documentlink, 
			  bg.withattachment AS tpm_withattachment, 
			  (bg.dtsmarkuprate):: character varying AS tpm_dtsmarkuprate, 
			  NULL :: character varying AS tpm_paymentno, 
			  NULL :: character varying AS tpm_paymentstatus, 
			  NULL :: character varying AS tpm_paytocode, 
			  NULL :: character varying AS tpm_paytoname, 
			  NULL :: character varying AS tpm_paymenttitle, 
			  NULL :: character varying AS tpm_reverseno, 
			  NULL :: character varying AS tpm_oldreverseno, 
			  NULL :: character varying AS tpm_invoicenumber, 
			  NULL :: character varying AS tpm_invoicetype, 
			  NULL :: character varying AS tpm_sapdocnumber, 
			  NULL :: date AS tpm_sapdocdate, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_paymentamountwithouttax, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_invoiceamountwithouttax, 
			  NULL :: character varying AS tpm_vatcode, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_vatamount, 
			  NULL :: character varying AS tpm_whtcode, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_whtamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_amountpayable, 
			  NULL :: character varying AS tpm_supportingdocuments, 
			  NULL :: character varying AS tpm_currentapprovaluser, 
			  NULL :: character varying AS tpm_rejectreason, 
			  NULL :: character varying AS tpm_contractnotemp, 
			  NULL :: date AS tpm_paymentstartdate, 
			  NULL :: date AS tpm_paymentenddate, 
			  NULL :: character varying AS tpm_autoallocate, 
			  NULL :: character varying AS tpm_parked, 
			  NULL :: character varying AS tpm_payfromaccrual, 
			  NULL :: character varying AS tpm_accrualglaccount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_contractoriginalamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_contractavailabletopay, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_plannedbalance, 
			  NULL :: character varying AS tpm_saprebateno, 
			  NULL :: character varying AS tpm_rebatesettlementno, 
			  NULL :: character varying AS tpm_sapcmno, 
			  NULL :: date AS tpm_sapcmdate, 
			  NULL :: character varying AS tpm_contractdetailstatus, 
			  NULL :: character varying AS tpm_createuser, 
			  NULL :: date AS tpm_createtime, 
			  NULL :: date AS tpm_applicantdate, 
			  NULL :: date AS tpm_approvedate, 
			  NULL :: date AS tpm_postingdate, 
			  NULL :: character varying AS tpm_postingperiod, 
			  NULL :: character varying AS tpm_fillingid, 
			  (NULL :: numeric):: numeric(18, 0) AS tpm_endtoendleadtime, 
			  (NULL :: numeric):: numeric(18, 0) AS tpm_salesinputleadtime, 
			  (NULL :: numeric):: numeric(18, 0) AS tpm_salesapprovalleadtime, 
			  NULL :: character varying AS tpm_mrc, 
			  NULL :: date AS tpm_printatddate, 
			  NULL :: character varying AS tpm_invoicenovat, 
			  NULL :: character varying AS tpm_invoicenowht, 
			  NULL :: character varying AS tpm_businesstaxcode, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_businesstaxamount, 
			  NULL :: character varying AS tpm_businesstax, 
			  (bg.commitment):: numeric(38, 11) AS tpm_commitment_monthly, 
			  bg.flag AS tpm_commitment_monthly_flag, 
			  ((0):: numeric):: numeric(18, 0) AS sellin_sales_quantity, 
			  ((0):: numeric):: numeric(18, 0) AS sellin_sales_value, 
			  ((0):: numeric):: numeric(18, 0) AS sellin_sales_value_usd, 
			  ((0):: numeric):: numeric(18, 0) AS sellin_value_list_price, 
			  ((0):: numeric):: numeric(18, 0) AS sellin_value_list_price_usd 
			FROM bg LEFT JOIN cur ON (bg.applicationid):: text = (cur.cntry_key):: text
					LEFT JOIN cb ON right((bg.accountgroupcode):: text,6) = right((cb.cust_num):: text,6)
					LEFT JOIN sell ON right((bg.accountgroupcode):: text,6) = (sell.soldto_code):: text
					LEFT JOIN mds ON upper((bg.materialname):: text) = upper((mds.prox_product_name):: text)
								  AND (bg.applicationid):: text = (mds.market):: text
					LEFT JOIN mds_cust ON right((bg.accountgroupcode):: text,6) = (mds_cust.local_cust_code):: text
		   ) base
),
block5 as
(
	SELECT base.year, 
		   base.mnth_id, 
		   base.mnth_no, 
		   base.univ_year, 
		   base.univ_month, 
		   base.country_code, 
		   base.data_source, 
		   base.soldto_code, 
		   base.distributor_code, 
		   (base.distributor_name):: character varying AS distributor_name, 
		   base.distributor_additional_attribute1, 
		   base.distributor_additional_attribute2, 
		   base.distributor_additional_attribute3, 
		   base.sap_parent_customer_key, 
		   base.sap_parent_customer_description, 
		   base.sap_customer_channel_key, 
		   base.sap_customer_channel_description, 
		   base.sap_customer_sub_channel_key, 
		   base.sap_sub_channel_description, 
		   base.sap_go_to_mdl_key, 
		   base.sap_go_to_mdl_description, 
		   base.sap_banner_key, 
		   base.sap_banner_description, 
		   base.sap_banner_format_key, 
		   base.sap_banner_format_description, 
		   base.retail_environment, 
		   base.customer_segment_key, 
		   NULL AS region, 
		   NULL AS zone_or_area, 
		   base.customer_segment_description, 
		   base.global_product_brand, 
		   NULL AS global_product_franchise, 
		   (base.global_product_category):: character varying AS global_product_category, 
		   NULL AS sls_org, 
		   base.from_currency, 
		   base.to_currecy, 
		   base.exchange_rate, 
		   base.exrt_from_ratio, 
		   base.exrt_to_ratio, 
		   base.sellout_sales_quantity, 
		   base.sellout_sales_value, 
		   (base.sellout_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellout_sales_value_usd, 
		   base.sellout_value_list_price, 
		   (base.sellout_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellout_value_list_price_usd, 
		   base.tpm_customer_cd, 
		   base.tpm_customer_nm, 
		   base.tpm_brand_cd, 
		   base.tpm_brand_nm, 
		   base.tpm_channel, 
		   base.tpm_sub_channel, 
		   NULL AS market_portfolio, 
		   (base.customer_segmentation):: character varying AS customer_segmentation, 
		   base.tpm_expensesubcategory, 
		   base.tpm_budgettype, 
		   base.tpm_budgetamount, 
		   base.tpm_used_budget, 
		   base.tpm_budgetbalance, 
		   base.tpm_ytdcommitment, 
		   base.tpm_ytgcommitment, 
		   base.tpm_commitment, 
		   base.tpm_penddingamount, 
		   base.tpm_paid, 
		   base.tpm_approvedpayment, 
		   base.tpm_pendingapprovalpayment, 
		   base.tpm_availabletopay, 
		   base.tpm_draftamount, 
		   base.tpm_budgetowner, 
		   (base.tpm_budgetamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetamount_usd, 
		   (base.tpm_used_budget * (base.exchange_rate):: numeric(38, 11)) AS tpm_used_budget_usd, 
		   (base.tpm_budgetbalance * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetbalance_usd, 
		   (base.tpm_ytdcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytdcommitment_usd, 
		   (base.tpm_ytgcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytgcommitment_usd, 
		   (base.tpm_commitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_usd, 
		   (base.tpm_penddingamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_penddingamount_usd, 
		   (base.tpm_paid * (base.exchange_rate):: numeric(38, 11)) AS tpm_paid_usd, 
		   (base.tpm_approvedpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_approvedpayment_usd, 
		   (base.tpm_pendingapprovalpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_pendingapprovalpayment_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS tpm_availabletopay_usd, 
		   (base.tpm_draftamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_draftamount_usd, 
		   base.tpm_customertype, 
		   base.tpm_hqsoldtocode, 
		   base.tpm_hqsoldtoname, 
		   base.tpm_contractno, 
		   base.tpm_contracttempno, 
		   base.tpm_contracttitle, 
		   base.tpm_themecode, 
		   base.tpm_themename, 
		   base.tpm_objective, 
		   base.tpm_feespaid, 
		   base.tpm_contractrevenuerecognitionstartdate, 
		   base.tpm_contractrevenuerecognitionenddate, 
		   base.tpm_contractpromoexecutionstartdate, 
		   base.tpm_contractpromoexecutionenddate, 
		   base.tpm_contractcreatedate, 
		   base.tpm_contractapprovaldate, 
		   base.tpm_contractstatus, 
		   base.tpm_dateback, 
		   base.tpm_datebackreason, 
		   base.tpm_expenseid, 
		   base.tpm_contract_customercode, 
		   base.tpm_contract_customername, 
		   base.tpm_rebateno, 
		   base.tpm_rebateactivityname, 
		   base.tpm_customercontractno, 
		   base.tpm_expenserevenuerecognitionstartdate, 
		   base.tpm_expenserevenuerecognitionenddate, 
		   base.tpm_expensepromoexecutionstartdate, 
		   base.tpm_expensepromoexecutionenddate, 
		   base.tpm_expenseclosed, 
		   base.tpm_closeuser, 
		   base.tpm_closetime, 
		   base.tpm_contracttype, 
		   base.tpm_conditiontype, 
		   base.tpm_glaccount, 
		   base.tpm_expensetypename, 
		   base.tpm_profitcenter, 
		   base.tpm_ppgcode, 
		   base.tpm_ppgname, 
		   base.tpm_rate, 
		   base.tpm_materialcode, 
		   base.tpm_materialname, 
		   base.tpm_rtmchannel, 
		   base.tpm_paymentmethod, 
		   base.tpm_expenseamount, 
		   base.tpm_commitmentamount, 
		   base.tpm_accrualreleaseamountwithouttax, 
		   base.tpm_closeamount, 
		   base.tpm_paidamount, 
		   base.tpm_approvedamount, 
		   base.tpm_unpaidamount, 
		   base.tpm_agingdays, 
		   base.tpm_aging, 
		   base.tpm_applicant, 
		   base.tpm_contractdescription, 
		   base.tpm_documentlink, 
		   base.tpm_withattachment, 
		   base.tpm_dtsmarkuprate, 
		   (base.tpm_expenseamount * (base.exchange_rate):: numeric(38, 11)) AS expenseamount_usd, 
		   (base.tpm_commitmentamount * (base.exchange_rate):: numeric(38, 11)) AS commitmentamount_usd, 
		   (base.tpm_accrualreleaseamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS accrualreleaseamountwithouttax_usd, 
		   (base.tpm_paidamount * (base.exchange_rate):: numeric(38, 11)) AS paidamount_usd, 
		   (base.tpm_approvedamount * (base.exchange_rate):: numeric(38, 11)) AS approvedamount_usd, 
		   (base.tpm_unpaidamount * (base.exchange_rate):: numeric(38, 11)) AS unpaidamount_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS availabletopay_usd, 
		   (base.tpm_closeamount * (base.exchange_rate):: numeric(38, 11)) AS closeamount_usd, 
		   base.tpm_paymentno, 
		   base.tpm_paymentstatus, 
		   base.tpm_paytocode, 
		   base.tpm_paytoname, 
		   base.tpm_paymenttitle, 
		   base.tpm_reverseno, 
		   base.tpm_oldreverseno, 
		   base.tpm_invoicenumber, 
		   base.tpm_invoicetype, 
		   base.tpm_sapdocnumber, 
		   base.tpm_sapdocdate, 
		   base.tpm_paymentamountwithouttax, 
		   base.tpm_invoiceamountwithouttax, 
		   base.tpm_vatcode, 
		   base.tpm_vatamount, 
		   base.tpm_whtcode, 
		   base.tpm_whtamount, 
		   base.tpm_amountpayable, 
		   base.tpm_supportingdocuments, 
		   base.tpm_currentapprovaluser, 
		   base.tpm_rejectreason, 
		   base.tpm_contractnotemp, 
		   base.tpm_paymentstartdate, 
		   base.tpm_paymentenddate, 
		   base.tpm_autoallocate, 
		   base.tpm_parked, 
		   base.tpm_payfromaccrual, 
		   base.tpm_accrualglaccount, 
		   base.tpm_contractoriginalamount, 
		   base.tpm_contractavailabletopay, 
		   base.tpm_plannedbalance, 
		   base.tpm_saprebateno, 
		   base.tpm_rebatesettlementno, 
		   base.tpm_sapcmno, 
		   base.tpm_sapcmdate, 
		   base.tpm_contractdetailstatus, 
		   base.tpm_createuser, 
		   base.tpm_createtime, 
		   base.tpm_applicantdate, 
		   base.tpm_approvedate, 
		   base.tpm_postingdate, 
		   base.tpm_postingperiod, 
		   base.tpm_fillingid, 
		   base.tpm_endtoendleadtime, 
		   base.tpm_salesinputleadtime, 
		   base.tpm_salesapprovalleadtime, 
		   base.tpm_mrc, 
		   base.tpm_printatddate, 
		   base.tpm_invoicenovat, 
		   base.tpm_invoicenowht, 
		   base.tpm_businesstaxcode, 
		   base.tpm_businesstaxamount, 
		   base.tpm_businesstax, 
		   (base.tpm_paymentamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS paymentamountwithouttax_usd, 
		   (base.tpm_invoiceamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS invoiceamountwithouttax_usd, 
		   (base.tpm_vatamount * (base.exchange_rate):: numeric(38, 11)) AS vatamount_usd, 
		   (base.tpm_whtamount * (base.exchange_rate):: numeric(38, 11)) AS whtamount_usd, 
		   (base.tpm_amountpayable * (base.exchange_rate):: numeric(38, 11)) AS amountpayable_usd, 
		   (base.tpm_contractoriginalamount * (base.exchange_rate):: numeric(38, 11)) AS contractoriginalamount_usd, 
		   (base.tpm_contractavailabletopay * (base.exchange_rate):: numeric(38, 11)) AS contractavailabletopay_usd, 
		   (base.tpm_plannedbalance * (base.exchange_rate):: numeric(38, 11)) AS plannedbalance_usd, 
		   (base.tpm_businesstaxamount * (base.exchange_rate):: numeric(38, 11)) AS businesstaxamount_usd, 
		   base.tpm_commitment_monthly, 
		   (base.tpm_commitment_monthly * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_monthly_usd, 
		   base.tpm_commitment_monthly_flag, 
		   base.sellin_sales_quantity, 
		   base.sellin_sales_value, 
		   (base.sellin_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellin_sales_value_usd, 
		   base.sellin_value_list_price, 
		   (base.sellin_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellin_value_list_price_usd, 
		   CASE WHEN ((base.country_code):: text = 'ID' :: text) THEN 'Indonesia' :: character varying 
				WHEN ((base.country_code):: text = 'SG' :: text) THEN 'Singapore' :: character varying 
				WHEN ((base.country_code):: text = 'MY' :: text) THEN 'Malaysia' :: character varying 
				WHEN ((base.country_code):: text = 'PH' :: text) THEN 'Philippines' :: character varying 
		   ELSE base.country_code END AS country_name, 
		   to_date((base.mnth_id):: text,'YYYYMM' :: text) AS dm_date 
	   FROM 
		 (SELECT 
			(sell.year):: character varying AS year, 
			sell.mnth_id, 
			(sell.mnth_no):: character varying AS mnth_no, 
			(sell.univ_year):: character varying AS univ_year, 
			(sell.univ_month):: character varying AS univ_month, 
			sell.country_code, 
			sell.data_source, 
			sell.soldto_code, 
			sell.distributor_code, 
			upper((cb.cust_nm):: text) AS distributor_name, 
			(upper((sell.distributor_additional_attribute1):: text)):: character varying AS distributor_additional_attribute1, 
			(upper((sell.distributor_additional_attribute2):: text)):: character varying AS distributor_additional_attribute2, 
			(upper((sell.distributor_additional_attribute3):: text)):: character varying AS distributor_additional_attribute3, 
			(upper((sell.sap_parent_customer_key):: text)):: character varying AS sap_parent_customer_key, 
			(upper((sell.sap_parent_customer_description):: text)):: character varying AS sap_parent_customer_description, 
			(upper((sell.sap_customer_channel_key):: text)):: character varying AS sap_customer_channel_key, 
			(upper((sell.sap_customer_channel_description):: text)):: character varying AS sap_customer_channel_description, 
			(upper((sell.sap_customer_sub_channel_key):: text)):: character varying AS sap_customer_sub_channel_key, 
			(upper((sell.sap_sub_channel_description):: text)):: character varying AS sap_sub_channel_description, 
			(upper((sell.sap_go_to_mdl_key):: text)):: character varying AS sap_go_to_mdl_key, 
			(upper((sell.sap_go_to_mdl_description):: text)):: character varying AS sap_go_to_mdl_description, 
			(upper((sell.sap_banner_key):: text)):: character varying AS sap_banner_key, 
			(upper((sell.sap_banner_description):: text)):: character varying AS sap_banner_description, 
			(upper((sell.sap_banner_format_key):: text)):: character varying AS sap_banner_format_key, 
			(upper((sell.sap_banner_format_description):: text)):: character varying AS sap_banner_format_description, 
			(upper((sell.retail_environment):: text)):: character varying AS retail_environment, 
			(upper((sell.customer_segment_key):: text)):: character varying AS customer_segment_key, 
			(upper((sell.customer_segment_description):: text)):: character varying AS customer_segment_description, 
			(upper((sell.global_product_brand):: text)):: character varying AS global_product_brand, 
			upper((mds.category):: text) AS global_product_category, 
			NULL :: character varying AS sls_org, 
			CASE WHEN ((sell.country_code):: text = 'ID' :: text) THEN 'IDR' :: character varying 
				 ELSE CASE WHEN ((sell.country_code):: text = 'MY' :: text) THEN 'MYR' :: character varying 
				 ELSE CASE WHEN ((sell.country_code):: text = 'SG' :: text) THEN 'SGD' :: character varying 
				 ELSE CASE WHEN ((sell.country_code):: text = 'PH' :: text) THEN 'PHP' :: character varying 
			ELSE sell.from_currency END END END END AS from_currency, 
			'USD' :: character varying AS to_currecy, 
			trunc((cur.exch_rate / (cur.from_ratio * cur.to_ratio)),5) AS exchange_rate, 
			cur.from_ratio AS exrt_from_ratio, 
			cur.to_ratio AS exrt_to_ratio, 
			(sell.sellout_sales_quantity):: numeric(38, 11) AS sellout_sales_quantity, 
			(sell.sellout_sales_value):: numeric(38, 11) AS sellout_sales_value, 
			(sell.sellout_value_list_price):: numeric(38, 11) AS sellout_value_list_price, 
			CASE WHEN (mds_cust.prox_cust_code IS NOT NULL) THEN mds_cust.prox_cust_code ELSE sell.soldto_code END AS tpm_customer_cd, 
			CASE WHEN (mds_cust.prox_cust_name IS NOT NULL) THEN (upper((mds_cust.prox_cust_name):: text)):: character varying ELSE sell.soldto_code END AS tpm_customer_nm, 
			(CASE WHEN (mds.prox_brand_code IS NOT NULL) THEN upper((mds.prox_brand_code):: text) ELSE upper((sell.global_product_brand):: text) END):: character varying AS tpm_brand_cd, 
			(CASE WHEN (mds.prox_brand_name IS NOT NULL) THEN upper((mds.prox_brand_name):: text) ELSE upper((sell.global_product_brand):: text) END):: character varying AS tpm_brand_nm, 
			(CASE WHEN (mds_chnl.prox_channel_name IS NOT NULL) THEN upper((mds_chnl.prox_channel_name):: text) ELSE CASE WHEN ((sell.country_code):: text = 'ID' :: text) THEN upper((sell.distributor_additional_attribute1):: text) ELSE upper((sell.sap_customer_channel_description):: text) END END):: character varying AS tpm_channel, 
			NULL :: character varying AS tpm_sub_channel, 
			upper((mds_cust.category):: text) AS customer_segmentation, 
			NULL :: character varying AS tpm_expensesubcategory, 
			NULL :: character varying AS tpm_budgettype, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_budgetamount, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_used_budget, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_budgetbalance, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_ytdcommitment, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_ytgcommitment, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_commitment, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_penddingamount, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_paid, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_approvedpayment, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_pendingapprovalpayment, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_availabletopay, 
			(NULL :: numeric):: numeric(38, 11) AS tpm_draftamount, 
			NULL :: character varying AS tpm_budgetowner, 
			(ct.customertype):: character varying AS tpm_customertype, 
			NULL :: character varying AS tpm_hqsoldtocode, 
			NULL :: character varying AS tpm_hqsoldtoname, 
			NULL :: character varying AS tpm_contractno, 
			NULL :: character varying AS tpm_contracttempno, 
			NULL :: character varying AS tpm_contracttitle, 
			NULL :: character varying AS tpm_themecode, 
			NULL :: character varying AS tpm_themename, 
			NULL :: character varying AS tpm_objective, 
			NULL :: character varying AS tpm_feespaid, 
			NULL :: date AS tpm_contractrevenuerecognitionstartdate, 
			NULL :: date AS tpm_contractrevenuerecognitionenddate, 
			NULL :: date AS tpm_contractpromoexecutionstartdate, 
			NULL :: date AS tpm_contractpromoexecutionenddate, 
			NULL :: date AS tpm_contractcreatedate, 
			NULL :: date AS tpm_contractapprovaldate, 
			NULL :: character varying AS tpm_contractstatus, 
			NULL :: character varying AS tpm_dateback, 
			NULL :: character varying AS tpm_datebackreason, 
			NULL :: character varying AS tpm_expenseid, 
			NULL :: character varying AS tpm_contract_customercode, 
			NULL :: character varying AS tpm_contract_customername, 
			NULL :: character varying AS tpm_rebateno, 
			NULL :: character varying AS tpm_rebateactivityname, 
			NULL :: character varying AS tpm_customercontractno, 
			NULL :: date AS tpm_expenserevenuerecognitionstartdate, 
			NULL :: date AS tpm_expenserevenuerecognitionenddate, 
			NULL :: date AS tpm_expensepromoexecutionstartdate, 
			NULL :: date AS tpm_expensepromoexecutionenddate, 
			NULL :: character varying AS tpm_expenseclosed, 
			NULL :: character varying AS tpm_closeuser, 
			NULL :: date AS tpm_closetime, 
			NULL :: character varying AS tpm_contracttype, 
			NULL :: character varying AS tpm_conditiontype, 
			NULL :: character varying AS tpm_glaccount, 
			NULL :: character varying AS tpm_expensetypename, 
			NULL :: character varying AS tpm_profitcenter, 
			NULL :: character varying AS tpm_ppgcode, 
			NULL :: character varying AS tpm_ppgname, 
			NULL :: character varying AS tpm_rate, 
			NULL :: character varying AS tpm_materialcode, 
			NULL :: character varying AS tpm_materialname, 
			(ct.rtmchannel):: character varying AS tpm_rtmchannel, 
			NULL :: character varying AS tpm_paymentmethod, 
			((0):: numeric):: numeric(18, 0) AS tpm_expenseamount, 
			((0):: numeric):: numeric(18, 0) AS tpm_commitmentamount, 
			((0):: numeric):: numeric(18, 0) AS tpm_accrualreleaseamountwithouttax, 
			((0):: numeric):: numeric(18, 0) AS tpm_closeamount, 
			((0):: numeric):: numeric(18, 0) AS tpm_paidamount, 
			((0):: numeric):: numeric(18, 0) AS tpm_approvedamount, 
			((0):: numeric):: numeric(18, 0) AS tpm_unpaidamount, 
			((0):: numeric):: numeric(18, 0) AS tpm_agingdays, 
			NULL :: character varying AS tpm_aging, 
			NULL :: character varying AS tpm_applicant, 
			NULL :: character varying AS tpm_contractdescription, 
			NULL :: character varying AS tpm_documentlink, 
			NULL :: character varying AS tpm_withattachment, 
			NULL :: character varying AS tpm_dtsmarkuprate, 
			NULL :: character varying AS tpm_paymentno, 
			NULL :: character varying AS tpm_paymentstatus, 
			NULL :: character varying AS tpm_paytocode, 
			NULL :: character varying AS tpm_paytoname, 
			NULL :: character varying AS tpm_paymenttitle, 
			NULL :: character varying AS tpm_reverseno, 
			NULL :: character varying AS tpm_oldreverseno, 
			NULL :: character varying AS tpm_invoicenumber, 
			NULL :: character varying AS tpm_invoicetype, 
			NULL :: character varying AS tpm_sapdocnumber, 
			NULL :: date AS tpm_sapdocdate, 
			((0):: numeric):: numeric(18, 0) AS tpm_paymentamountwithouttax, 
			((0):: numeric):: numeric(18, 0) AS tpm_invoiceamountwithouttax, 
			NULL :: character varying AS tpm_vatcode, 
			((0):: numeric):: numeric(18, 0) AS tpm_vatamount, 
			NULL :: character varying AS tpm_whtcode, 
			((0):: numeric):: numeric(18, 0) AS tpm_whtamount, 
			((0):: numeric):: numeric(18, 0) AS tpm_amountpayable, 
			NULL :: character varying AS tpm_supportingdocuments, 
			NULL :: character varying AS tpm_currentapprovaluser, 
			NULL :: character varying AS tpm_rejectreason, 
			NULL :: character varying AS tpm_contractnotemp, 
			NULL :: date AS tpm_paymentstartdate, 
			NULL :: date AS tpm_paymentenddate, 
			NULL :: character varying AS tpm_autoallocate, 
			NULL :: character varying AS tpm_parked, 
			NULL :: character varying AS tpm_payfromaccrual, 
			NULL :: character varying AS tpm_accrualglaccount, 
			((0):: numeric):: numeric(18, 0) AS tpm_contractoriginalamount, 
			((0):: numeric):: numeric(18, 0) AS tpm_contractavailabletopay, 
			((0):: numeric):: numeric(18, 0) AS tpm_plannedbalance, 
			NULL :: character varying AS tpm_saprebateno, 
			NULL :: character varying AS tpm_rebatesettlementno, 
			NULL :: character varying AS tpm_sapcmno, 
			NULL :: date AS tpm_sapcmdate, 
			NULL :: character varying AS tpm_contractdetailstatus, 
			NULL :: character varying AS tpm_createuser, 
			NULL :: date AS tpm_createtime, 
			NULL :: date AS tpm_applicantdate, 
			NULL :: date AS tpm_approvedate, 
			NULL :: date AS tpm_postingdate, 
			NULL :: character varying AS tpm_postingperiod, 
			NULL :: character varying AS tpm_fillingid, 
			(NULL :: numeric):: numeric(18, 0) AS tpm_endtoendleadtime, 
			(NULL :: numeric):: numeric(18, 0) AS tpm_salesinputleadtime, 
			(NULL :: numeric):: numeric(18, 0) AS tpm_salesapprovalleadtime, 
			NULL :: character varying AS tpm_mrc, 
			NULL :: date AS tpm_printatddate, 
			NULL :: character varying AS tpm_invoicenovat, 
			NULL :: character varying AS tpm_invoicenowht, 
			NULL :: character varying AS tpm_businesstaxcode, 
			((0):: numeric):: numeric(18, 0) AS tpm_businesstaxamount, 
			NULL :: character varying AS tpm_businesstax, 
			((0):: numeric):: numeric(18, 0) AS plannedbalance_usd, 
			((0):: numeric):: numeric(18, 0) AS businesstaxamount_usd, 
			((0):: numeric):: numeric(18, 0) AS tpm_commitment_monthly, 
			NULL :: character varying AS tpm_commitment_monthly_flag, 
			((0):: numeric):: numeric(18, 0) AS sellin_sales_quantity, 
			((0):: numeric):: numeric(18, 0) AS sellin_sales_value, 
			((0):: numeric):: numeric(18, 0) AS sellin_value_list_price 
		  FROM sell1 sell LEFT JOIN cur ON (sell.country_code):: text = (cur.cntry_key):: text
						  LEFT JOIN cb ON right((sell.soldto_code):: text,6) = right((cb.cust_num):: text,6)
						  LEFT JOIN mds1 mds ON upper(trim((sell.global_product_brand):: text)) = upper(trim((mds.regional_brand_name):: text))
										AND (sell.country_code):: text = (mds.market):: text
						  LEFT JOIN mds_cust ON (sell.soldto_code):: text = (mds_cust.local_cust_code):: text
						  LEFT JOIN ct ON right((mds_cust.prox_cust_code):: text,6) = right(ct.accountgroupcode, 6)
						  LEFT JOIN mds_chnl ON upper((mds_chnl.regional_channel_name):: text) = CASE WHEN ((sell.country_code):: text = 'ID' :: text) THEN upper((sell.distributor_additional_attribute1):: text) ELSE upper((sell.sap_customer_channel_description):: text) END
											 AND (sell.country_code):: text = (mds_chnl.market):: text
		) base
),
block6 as
(
	SELECT base.year, 
		   base.mnth_id, 
		   base.mnth_no, 
		   base.univ_year, 
		   base.univ_month, 
		   base.country_code, 
		   base.data_source, 
		   base.soldto_code, 
		   base.distributor_code, 
		   (base.distributor_name):: character varying AS distributor_name, 
		   base.distributor_additional_attribute1, 
		   base.distributor_additional_attribute2, 
		   base.distributor_additional_attribute3, 
		   base.sap_parent_customer_key, 
		   base.sap_parent_customer_description, 
		   base.sap_customer_channel_key, 
		   base.sap_customer_channel_description, 
		   base.sap_customer_sub_channel_key, 
		   base.sap_sub_channel_description, 
		   base.sap_go_to_mdl_key, 
		   base.sap_go_to_mdl_description, 
		   base.sap_banner_key, 
		   base.sap_banner_description, 
		   base.sap_banner_format_key, 
		   base.sap_banner_format_description, 
		   base.retail_environment, 
		   base.customer_segment_key, 
		   NULL AS region, 
		   NULL AS zone_or_area, 
		   base.customer_segment_description, 
		   (base.global_product_brand):: character varying AS global_product_brand, 
		   NULL AS global_product_franchise, 
		   (base.global_product_category):: character varying AS global_product_category, 
		   NULL AS sls_org, 
		   base.from_currency, 
		   base.to_currecy, 
		   base.exchange_rate, 
		   base.exrt_from_ratio, 
		   base.exrt_to_ratio, 
		   base.sellout_sales_quantity, 
		   base.sellout_sales_value, 
		   (base.sellout_sales_value * (base.exchange_rate):: numeric(38, 11)) AS sellout_sales_value_usd, 
		   base.sellout_value_list_price, 
		   (base.sellout_value_list_price * (base.exchange_rate):: numeric(38, 11)) AS sellout_value_list_price_usd, 
		   base.tpm_customer_cd, 
		   base.tpm_customer_nm, 
		   base.tpm_brand_cd, 
		   base.tpm_brand_nm, 
		   base.tpm_channel, 
		   base.tpm_sub_channel, 
		   NULL AS market_portfolio, 
		   (base.customer_segmentation):: character varying AS customer_segmentation, 
		   base.tpm_expensesubcategory, 
		   base.tpm_budgettype, 
		   base.tpm_budgetamount, 
		   base.tpm_used_budget, 
		   base.tpm_budgetbalance, 
		   base.tpm_ytdcommitment, 
		   base.tpm_ytgcommitment, 
		   base.tpm_commitment, 
		   base.tpm_penddingamount, 
		   base.tpm_paid, 
		   base.tpm_approvedpayment, 
		   base.tpm_pendingapprovalpayment, 
		   base.tpm_availabletopay, 
		   base.tpm_draftamount, 
		   base.tpm_budgetowner, 
		   (base.tpm_budgetamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetamount_usd, 
		   (base.tpm_used_budget * (base.exchange_rate):: numeric(38, 11)) AS tpm_used_budget_usd, 
		   (base.tpm_budgetbalance * (base.exchange_rate):: numeric(38, 11)) AS tpm_budgetbalance_usd, 
		   (base.tpm_ytdcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytdcommitment_usd, 
		   (base.tpm_ytgcommitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_ytgcommitment_usd, 
		   (base.tpm_commitment * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_usd, 
		   (base.tpm_penddingamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_penddingamount_usd, 
		   (base.tpm_paid * (base.exchange_rate):: numeric(38, 11)) AS tpm_paid_usd, 
		   (base.tpm_approvedpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_approvedpayment_usd, 
		   (base.tpm_pendingapprovalpayment * (base.exchange_rate):: numeric(38, 11)) AS tpm_pendingapprovalpayment_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS tpm_availabletopay_usd, 
		   (base.tpm_draftamount * (base.exchange_rate):: numeric(38, 11)) AS tpm_draftamount_usd, 
		   base.tpm_customertype, 
		   base.tpm_hqsoldtocode, 
		   base.tpm_hqsoldtoname, 
		   base.tpm_contractno, 
		   base.tpm_contracttempno, 
		   base.tpm_contracttitle, 
		   base.tpm_themecode, 
		   base.tpm_themename, 
		   base.tpm_objective, 
		   base.tpm_feespaid, 
		   base.tpm_contractrevenuerecognitionstartdate, 
		   base.tpm_contractrevenuerecognitionenddate, 
		   base.tpm_contractpromoexecutionstartdate, 
		   base.tpm_contractpromoexecutionenddate, 
		   base.tpm_contractcreatedate, 
		   base.tpm_contractapprovaldate, 
		   base.tpm_contractstatus, 
		   base.tpm_dateback, 
		   base.tpm_datebackreason, 
		   base.tpm_expenseid, 
		   base.tpm_contract_customercode, 
		   base.tpm_contract_customername, 
		   base.tpm_rebateno, 
		   base.tpm_rebateactivityname, 
		   base.tpm_customercontractno, 
		   base.tpm_expenserevenuerecognitionstartdate, 
		   base.tpm_expenserevenuerecognitionenddate, 
		   base.tpm_expensepromoexecutionstartdate, 
		   base.tpm_expensepromoexecutionenddate, 
		   base.tpm_expenseclosed, 
		   base.tpm_closeuser, 
		   base.tpm_closetime, 
		   base.tpm_contracttype, 
		   base.tpm_conditiontype, 
		   base.tpm_glaccount, 
		   base.tpm_expensetypename, 
		   base.tpm_profitcenter, 
		   base.tpm_ppgcode, 
		   base.tpm_ppgname, 
		   base.tpm_rate, 
		   base.tpm_materialcode, 
		   base.tpm_materialname, 
		   base.tpm_rtmchannel, 
		   base.tpm_paymentmethod, 
		   base.tpm_expenseamount, 
		   base.tpm_commitmentamount, 
		   base.tpm_accrualreleaseamountwithouttax, 
		   base.tpm_closeamount, 
		   base.tpm_paidamount, 
		   base.tpm_approvedamount, 
		   base.tpm_unpaidamount, 
		   base.tpm_agingdays, 
		   base.tpm_aging, 
		   base.tpm_applicant, 
		   base.tpm_contractdescription, 
		   base.tpm_documentlink, 
		   base.tpm_withattachment, 
		   base.tpm_dtsmarkuprate, 
		   (base.tpm_expenseamount * (base.exchange_rate):: numeric(38, 11)) AS expenseamount_usd, 
		   (base.tpm_commitmentamount * (base.exchange_rate):: numeric(38, 11)) AS commitmentamount_usd, 
		   (base.tpm_accrualreleaseamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS accrualreleaseamountwithouttax_usd, 
		   (base.tpm_paidamount * (base.exchange_rate):: numeric(38, 11)) AS paidamount_usd, 
		   (base.tpm_approvedamount * (base.exchange_rate):: numeric(38, 11)) AS approvedamount_usd, 
		   (base.tpm_unpaidamount * (base.exchange_rate):: numeric(38, 11)) AS unpaidamount_usd, 
		   (base.tpm_availabletopay * (base.exchange_rate):: numeric(38, 11)) AS availabletopay_usd, 
		   (base.tpm_closeamount * (base.exchange_rate):: numeric(38, 11)) AS closeamount_usd, 
		   base.tpm_paymentno, 
		   base.tpm_paymentstatus, 
		   base.tpm_paytocode, 
		   base.tpm_paytoname, 
		   base.tpm_paymenttitle, 
		   base.tpm_reverseno, 
		   base.tpm_oldreverseno, 
		   base.tpm_invoicenumber, 
		   base.tpm_invoicetype, 
		   base.tpm_sapdocnumber, 
		   base.tpm_sapdocdate, 
		   base.tpm_paymentamountwithouttax, 
		   base.tpm_invoiceamountwithouttax, 
		   base.tpm_vatcode, 
		   base.tpm_vatamount, 
		   base.tpm_whtcode, 
		   base.tpm_whtamount, 
		   base.tpm_amountpayable, 
		   base.tpm_supportingdocuments, 
		   base.tpm_currentapprovaluser, 
		   base.tpm_rejectreason, 
		   base.tpm_contractnotemp, 
		   base.tpm_paymentstartdate, 
		   base.tpm_paymentenddate, 
		   base.tpm_autoallocate, 
		   base.tpm_parked, 
		   base.tpm_payfromaccrual, 
		   base.tpm_accrualglaccount, 
		   base.tpm_contractoriginalamount, 
		   base.tpm_contractavailabletopay, 
		   base.tpm_plannedbalance, 
		   base.tpm_saprebateno, 
		   base.tpm_rebatesettlementno, 
		   base.tpm_sapcmno, 
		   base.tpm_sapcmdate, 
		   base.tpm_contractdetailstatus, 
		   base.tpm_createuser, 
		   base.tpm_createtime, 
		   base.tpm_applicantdate, 
		   base.tpm_approvedate, 
		   base.tpm_postingdate, 
		   base.tpm_postingperiod, 
		   base.tpm_fillingid, 
		   base.tpm_endtoendleadtime, 
		   base.tpm_salesinputleadtime, 
		   base.tpm_salesapprovalleadtime, 
		   base.tpm_mrc, 
		   base.tpm_printatddate, 
		   base.tpm_invoicenovat, 
		   base.tpm_invoicenowht, 
		   base.tpm_businesstaxcode, 
		   base.tpm_businesstaxamount, 
		   base.tpm_businesstax, 
		   (base.tpm_paymentamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS paymentamountwithouttax_usd, 
		   (base.tpm_invoiceamountwithouttax * (base.exchange_rate):: numeric(38, 11)) AS invoiceamountwithouttax_usd, 
		   (base.tpm_vatamount * (base.exchange_rate):: numeric(38, 11)) AS vatamount_usd, 
		   (base.tpm_whtamount * (base.exchange_rate):: numeric(38, 11)) AS whtamount_usd, 
		   (base.tpm_amountpayable * (base.exchange_rate):: numeric(38, 11)) AS amountpayable_usd, 
		   (base.tpm_contractoriginalamount * (base.exchange_rate):: numeric(38, 11)) AS contractoriginalamount_usd, 
		   (base.tpm_contractavailabletopay * (base.exchange_rate):: numeric(38, 11)) AS contractavailabletopay_usd, 
		   (base.tpm_plannedbalance * (base.exchange_rate):: numeric(38, 11)) AS plannedbalance_usd, 
		   (base.tpm_businesstaxamount * (base.exchange_rate):: numeric(38, 11)) AS businesstaxamount_usd, 
		   base.tpm_commitment_monthly, 
		   (base.tpm_commitment_monthly * (base.exchange_rate):: numeric(38, 11)) AS tpm_commitment_monthly_usd, 
		   base.tpm_commitment_monthly_flag, 
		   base.sellin_sales_quantity, 
		   base.sellin_sales_value, 
		   base.sellin_sales_value_usd, 
		   base.sellin_value_list_price, 
		   base.sellin_value_list_price_usd, 
		   CASE WHEN ((base.country_code):: text = 'ID' :: text) THEN 'Indonesia' :: character varying 
				WHEN ((base.country_code):: text = 'SG' :: text) THEN 'Singapore' :: character varying 
				WHEN ((base.country_code):: text = 'MY' :: text) THEN 'Malaysia' :: character varying 
				WHEN ((base.country_code):: text = 'PH' :: text) THEN 'Philippines' :: character varying 
		   ELSE base.country_code END AS country_name, 
		   to_date((base.mnth_id):: text,'YYYYMM' :: text) AS dm_date 
		FROM 
		  (SELECT 
			  (sellin.year):: character varying AS year, 
			  sellin.mnth_id, 
			  (ltrim(sellin.mnth_no, '0' :: text)):: character varying AS mnth_no, 
			  (sellin.univ_year):: character varying AS univ_year, 
			  (sellin.univ_month):: character varying AS univ_month, 
			  sellin.cntry_cd AS country_code, 
			  'SELLIN' :: character varying AS data_source, 
			  (sellin.cust_num):: character varying AS soldto_code, 
			  (sellin.cust_num):: character varying AS distributor_code, 
			  upper((cb.cust_nm):: text) AS distributor_name, 
			  (upper((sell.distributor_additional_attribute1):: text)):: character varying AS distributor_additional_attribute1, 
			  NULL :: character varying AS distributor_additional_attribute2, 
			  NULL :: character varying AS distributor_additional_attribute3, 
			  (upper((sell.sap_parent_customer_key):: text)):: character varying AS sap_parent_customer_key, 
			  (upper((sell.sap_parent_customer_description):: text)):: character varying AS sap_parent_customer_description, 
			  (upper((sell.sap_customer_channel_key):: text)):: character varying AS sap_customer_channel_key, 
			  (upper((sell.sap_customer_channel_description):: text)):: character varying AS sap_customer_channel_description, 
			  (upper((sell.sap_customer_sub_channel_key):: text)):: character varying AS sap_customer_sub_channel_key, 
			  (upper((sell.sap_sub_channel_description):: text)):: character varying AS sap_sub_channel_description, 
			  (upper((sell.sap_go_to_mdl_key):: text)):: character varying AS sap_go_to_mdl_key, 
			  (upper((sell.sap_go_to_mdl_description):: text)):: character varying AS sap_go_to_mdl_description, 
			  (upper((sell.sap_banner_key):: text)):: character varying AS sap_banner_key, 
			  (upper((sell.sap_banner_description):: text)):: character varying AS sap_banner_description, 
			  (upper((sell.sap_banner_format_key):: text)):: character varying AS sap_banner_format_key, 
			  (upper((sell.sap_banner_format_description):: text)):: character varying AS sap_banner_format_description, 
			  (upper((sell.retail_environment):: text)):: character varying AS retail_environment, 
			  (upper((sell.customer_segment_key):: text)):: character varying AS customer_segment_key, 
			  (upper((sell.customer_segment_description):: text)):: character varying AS customer_segment_description, 
			  upper((sellin.gcph_brand):: text) AS global_product_brand, 
			  upper((mds.category):: text) AS global_product_category, 
			  NULL :: character varying AS sls_org, 
			  CASE WHEN ((sellin.cntry_cd):: text = 'ID' :: text) THEN 'IDR' :: character varying 
				   ELSE CASE WHEN ((sellin.cntry_cd):: text = 'MY' :: text) THEN 'MYR' :: character varying 
				   ELSE CASE WHEN ((sellin.cntry_cd):: text = 'SG' :: text) THEN 'SGD' :: character varying 
				   ELSE CASE WHEN ((sellin.cntry_cd):: text = 'PH' :: text) THEN 'PHP' :: character varying 
			  ELSE sellin.from_currency END END END END AS from_currency, 
			  'USD' :: character varying AS to_currecy, 
			  ((cur.exch_rate / (cur.from_ratio * cur.to_ratio))):: numeric(15, 5) AS exchange_rate, 
			  cur.from_ratio AS exrt_from_ratio, 
			  cur.to_ratio AS exrt_to_ratio, 
			  ((0):: numeric):: numeric(18, 0) AS sellout_sales_quantity, 
			  ((0):: numeric):: numeric(18, 0) AS sellout_sales_value, 
			  ((0):: numeric):: numeric(18, 0) AS sellout_value_list_price, 
			  (CASE WHEN (mds_cust.prox_cust_code IS NOT NULL) THEN (mds_cust.prox_cust_code):: text ELSE sellin.cust_num END):: character varying AS tpm_customer_cd, 
			  (CASE WHEN (mds_cust.prox_cust_name IS NOT NULL) THEN upper((mds_cust.prox_cust_name):: text) ELSE upper((cb.cust_nm):: text) END):: character varying AS tpm_customer_nm, 
			  (CASE WHEN (mds.prox_brand_code IS NOT NULL) THEN upper((mds.prox_brand_code):: text) ELSE upper((sellin.gcph_brand):: text) END):: character varying AS tpm_brand_cd, 
			  (CASE WHEN (mds.prox_brand_name IS NOT NULL) THEN upper((mds.prox_brand_name):: text) ELSE upper((sellin.gcph_brand):: text) END):: character varying AS tpm_brand_nm, 
			  (CASE WHEN (mds_chnl.prox_channel_name IS NOT NULL) THEN upper((mds_chnl.prox_channel_name):: text) ELSE CASE WHEN ((sellin.cntry_cd):: text = 'ID' :: text) THEN upper((sell.distributor_additional_attribute1):: text) ELSE upper((sell.sap_customer_channel_description):: text) END END):: character varying AS tpm_channel, 
			  NULL :: character varying AS tpm_sub_channel, 
			  upper((mds_cust.category):: text) AS customer_segmentation, 
			  NULL :: character varying AS tpm_expensesubcategory, 
			  NULL :: character varying AS tpm_budgettype, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_budgetamount, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_used_budget, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_budgetbalance, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_ytdcommitment, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_ytgcommitment, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_commitment, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_penddingamount, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_paid, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_approvedpayment, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_pendingapprovalpayment, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_availabletopay, 
			  (NULL :: numeric):: numeric(38, 11) AS tpm_draftamount, 
			  NULL :: character varying AS tpm_budgetowner, 
			  (ct.customertype):: character varying AS tpm_customertype, 
			  NULL :: character varying AS tpm_hqsoldtocode, 
			  NULL :: character varying AS tpm_hqsoldtoname, 
			  NULL :: character varying AS tpm_contractno, 
			  NULL :: character varying AS tpm_contracttempno, 
			  NULL :: character varying AS tpm_contracttitle, 
			  NULL :: character varying AS tpm_themecode, 
			  NULL :: character varying AS tpm_themename, 
			  NULL :: character varying AS tpm_objective, 
			  NULL :: character varying AS tpm_feespaid, 
			  NULL :: date AS tpm_contractrevenuerecognitionstartdate, 
			  NULL :: date AS tpm_contractrevenuerecognitionenddate, 
			  NULL :: date AS tpm_contractpromoexecutionstartdate, 
			  NULL :: date AS tpm_contractpromoexecutionenddate, 
			  NULL :: date AS tpm_contractcreatedate, 
			  NULL :: date AS tpm_contractapprovaldate, 
			  NULL :: character varying AS tpm_contractstatus, 
			  NULL :: character varying AS tpm_dateback, 
			  NULL :: character varying AS tpm_datebackreason, 
			  NULL :: character varying AS tpm_expenseid, 
			  NULL :: character varying AS tpm_contract_customercode, 
			  NULL :: character varying AS tpm_contract_customername, 
			  NULL :: character varying AS tpm_rebateno, 
			  NULL :: character varying AS tpm_rebateactivityname, 
			  NULL :: character varying AS tpm_customercontractno, 
			  NULL :: date AS tpm_expenserevenuerecognitionstartdate, 
			  NULL :: date AS tpm_expenserevenuerecognitionenddate, 
			  NULL :: date AS tpm_expensepromoexecutionstartdate, 
			  NULL :: date AS tpm_expensepromoexecutionenddate, 
			  NULL :: character varying AS tpm_expenseclosed, 
			  NULL :: character varying AS tpm_closeuser, 
			  NULL :: date AS tpm_closetime, 
			  NULL :: character varying AS tpm_contracttype, 
			  NULL :: character varying AS tpm_conditiontype, 
			  NULL :: character varying AS tpm_glaccount, 
			  NULL :: character varying AS tpm_expensetypename, 
			  NULL :: character varying AS tpm_profitcenter, 
			  NULL :: character varying AS tpm_ppgcode, 
			  NULL :: character varying AS tpm_ppgname, 
			  NULL :: character varying AS tpm_rate, 
			  NULL :: character varying AS tpm_materialcode, 
			  NULL :: character varying AS tpm_materialname, 
			  (ct.rtmchannel):: character varying AS tpm_rtmchannel, 
			  NULL :: character varying AS tpm_paymentmethod, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_expenseamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_commitmentamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_accrualreleaseamountwithouttax, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_closeamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_paidamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_approvedamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_unpaidamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_agingdays, 
			  NULL :: character varying AS tpm_aging, 
			  NULL :: character varying AS tpm_applicant, 
			  NULL :: character varying AS tpm_contractdescription, 
			  NULL :: character varying AS tpm_documentlink, 
			  NULL :: character varying AS tpm_withattachment, 
			  NULL :: character varying AS tpm_dtsmarkuprate, 
			  NULL :: character varying AS tpm_paymentno, 
			  NULL :: character varying AS tpm_paymentstatus, 
			  NULL :: character varying AS tpm_paytocode, 
			  NULL :: character varying AS tpm_paytoname, 
			  NULL :: character varying AS tpm_paymenttitle, 
			  NULL :: character varying AS tpm_reverseno, 
			  NULL :: character varying AS tpm_oldreverseno, 
			  NULL :: character varying AS tpm_invoicenumber, 
			  NULL :: character varying AS tpm_invoicetype, 
			  NULL :: character varying AS tpm_sapdocnumber, 
			  NULL :: date AS tpm_sapdocdate, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_paymentamountwithouttax, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_invoiceamountwithouttax, 
			  NULL :: character varying AS tpm_vatcode, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_vatamount, 
			  NULL :: character varying AS tpm_whtcode, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_whtamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_amountpayable, 
			  NULL :: character varying AS tpm_supportingdocuments, 
			  NULL :: character varying AS tpm_currentapprovaluser, 
			  NULL :: character varying AS tpm_rejectreason, 
			  NULL :: character varying AS tpm_contractnotemp, 
			  NULL :: date AS tpm_paymentstartdate, 
			  NULL :: date AS tpm_paymentenddate, 
			  NULL :: character varying AS tpm_autoallocate, 
			  NULL :: character varying AS tpm_parked, 
			  NULL :: character varying AS tpm_payfromaccrual, 
			  NULL :: character varying AS tpm_accrualglaccount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_contractoriginalamount, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_contractavailabletopay, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_plannedbalance, 
			  NULL :: character varying AS tpm_saprebateno, 
			  NULL :: character varying AS tpm_rebatesettlementno, 
			  NULL :: character varying AS tpm_sapcmno, 
			  NULL :: date AS tpm_sapcmdate, 
			  NULL :: character varying AS tpm_contractdetailstatus, 
			  NULL :: character varying AS tpm_createuser, 
			  NULL :: date AS tpm_createtime, 
			  NULL :: date AS tpm_applicantdate, 
			  NULL :: date AS tpm_approvedate, 
			  NULL :: date AS tpm_postingdate, 
			  NULL :: character varying AS tpm_postingperiod, 
			  NULL :: character varying AS tpm_fillingid, 
			  (NULL :: numeric):: numeric(18, 0) AS tpm_endtoendleadtime, 
			  (NULL :: numeric):: numeric(18, 0) AS tpm_salesinputleadtime, 
			  (NULL :: numeric):: numeric(18, 0) AS tpm_salesapprovalleadtime, 
			  NULL :: character varying AS tpm_mrc, 
			  NULL :: date AS tpm_printatddate, 
			  NULL :: character varying AS tpm_invoicenovat, 
			  NULL :: character varying AS tpm_invoicenowht, 
			  NULL :: character varying AS tpm_businesstaxcode, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_businesstaxamount, 
			  NULL :: character varying AS tpm_businesstax, 
			  ((0):: numeric):: numeric(18, 0) AS plannedbalance_usd, 
			  ((0):: numeric):: numeric(18, 0) AS businesstaxamount_usd, 
			  ((0):: numeric):: numeric(18, 0) AS tpm_commitment_monthly, 
			  NULL :: character varying AS tpm_commitment_monthly_flag, 
			  (sellin.nts_qty):: numeric(38, 11) AS sellin_sales_quantity, 
			  (sellin.nts_lcy):: numeric(38, 11) AS sellin_sales_value, 
			  (sellin.nts_usd):: numeric(38, 11) AS sellin_sales_value_usd, 
			  (sellin.gts_lcy):: numeric(38, 11) AS sellin_value_list_price, 
			  (sellin.gts_usd):: numeric(38, 11) AS sellin_value_list_price_usd 
			FROM sellin LEFT JOIN cur ON (sellin.cntry_cd):: text = (cur.cntry_key):: text
						LEFT JOIN cb ON sellin.cust_num = right((cb.cust_num):: text,6)
						LEFT JOIN sell ON right(sellin.cust_num, 6) = (sell.soldto_code):: text
						LEFT JOIN mds1 mds ON upper(trim((sellin.gcph_brand):: text)) = upper(trim((mds.regional_brand_name):: text))
									  AND (sellin.cntry_cd):: text = (mds.market):: text
						LEFT JOIN mds_cust ON right(sellin.cust_num, 6) = (mds_cust.local_cust_code):: text
						LEFT JOIN ct ON right((mds_cust.prox_cust_code):: text,6) = right(ct.accountgroupcode,6)
						LEFT JOIN mds_chnl ON upper((mds_chnl.regional_channel_name):: text) = CASE WHEN ((sellin.cntry_cd):: text = 'ID' :: text) THEN upper((sell.distributor_additional_attribute1):: text) ELSE upper((sell.sap_customer_channel_description):: text) END
										   AND (sellin.cntry_cd):: text = (mds_chnl.market):: text
		   ) base
),
final as
(
	select * from block1
	UNION ALL
	select * from block2
	UNION ALL
	select * from block3
	UNION ALL
	select * from block4
	UNION ALL
	select * from block5
	UNION ALL
	select * from block6
)
select * from final