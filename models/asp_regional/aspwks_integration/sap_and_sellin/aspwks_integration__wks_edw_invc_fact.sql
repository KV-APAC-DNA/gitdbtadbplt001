{{ config(
  sql_header="USE WAREHOUSE "+ env_var("DBT_ENV_CORE_DB_MEDIUM_WH")+ ";"
) }}

with source as (
    select * from {{ ref('aspitg_integration__itg_invc_sls') }}
),
edw_calendar_dim as (
select * from {{ ref('aspedw_integration__edw_calendar_dim') }} 
),
final as(
  SELECT
    trim(act_delv_dt) as act_delv_dt,
    trim(act_good_iss_dt) as act_good_iss_dt,
    nvl(trim(bill_to_prty)::string,'') as bill_to_prty,
    trim(bill_dt) as bill_dt,
    nvl(trim(bill_ty)::string,'') as bill_ty,
    nvl(trim(bill_doc)::string,'') as bill_doc,
    nvl(trim(cmpy_cd)::string,'') as cmpy_cd,
    nvl(trim(cust_no)::string,'') as cust_no,
    trim(delv_doc_crt_dt) as delv_doc_crt_dt,
    nvl(trim(dstr_chnl)::string,'') as dstr_chnl,
    nvl(trim(div)::string,'') as div,
    trim(doc_crt_dt) as doc_crt_dt,
    trim(doc_dt) as doc_dt,
    trim(good_iss_dt) as good_iss_dt,
    nvl(trim(mat)::string,'') as mat,
    trim(mat_avail_dt) as mat_avail_dt,
    nvl(trim(ord_rsn)::string,'') as ord_rsn,
    nvl(trim(ovrl_rej_sts)::string,'') as ovrl_rej_sts,
    nvl(trim(ovrl_sts_crd_chk)::string,'') as ovrl_sts_crd_chk,
    nvl(trim(payer)::string,'') as payer,
    nvl(trim(plant)::string,'') as plant,
    trim(prec_doc_itm) as prec_doc_itm,
    nvl(trim(prec_doc_num)::string,'') as prec_doc_num,
    trim(proof_delv_dt) as proof_delv_dt,
    nvl(trim(rsn_cd_key)::string,'') as rsn_cd_key,
    nvl(trim(rsn_rej)::string,'') as rsn_rej,
    trim(rlse_dt_cr_mgmt) as rlse_dt_cr_mgmt,
    trim(rqst_delv_dt) as rqst_delv_dt,
    nvl(trim(route)::string,'') as route,
    nvl(trim(sls_doc)::string,'') as sls_doc,
    nvl(trim(sls_doc_cat)::string,'') as sls_doc_cat,
    trim(sls_doc_itm) as sls_doc_itm,
    nvl(trim(sls_doc_typ)::string,'') as sls_doc_typ,
    trim(sls_emp_hist) as sls_emp_hist,
    nvl(trim(sls_org)::string,'') as sls_org,
    nvl(trim(sls_doc_itm_cat)::string,'') as sls_doc_itm_cat,
    nvl(trim(ship_to_prty)::string,'') as ship_to_prty,
    nvl(trim(sold_to_prty)::string,'') as sold_to_prty,
    SUM(bill_qty_cse) AS bill_qty_cse,
    SUM(bill_qty_pc) AS bill_qty_pc,
    SUM(bill_qty_difot) AS bill_qty_difot,
    SUM(bill_qty_otif) AS bill_qty_otif,
    SUM(bill_qty_sls_uom) AS bill_qty_sls_uom,
    SUM(cnfrm_qty_difot) AS cnfrm_qty_difot,
    SUM(cnfrm_qty_pc) AS cnfrm_qty_pc,
    SUM(delv_qty_cse) AS delv_qty_cse,
    SUM(delv_qty_pc) AS delv_qty_pc,
    SUM(delv_qty_sls_uom) AS delv_qty_sls_uom,
    SUM(est_nts) AS est_nts,
    SUM(nts_bill) AS nts_bill,
    SUM(net_invc_sls) AS net_invc_sls,
    SUM(fut_sls_qty) AS fut_sls_qty,
    SUM(gros_trd_sls) AS gros_trd_sls,
    SUM(net_amt) AS net_amt,
    SUM(net_prc) AS net_prc,
    SUM(net_bill_val) AS net_bill_val,
    SUM(net_ord_val) AS net_ord_val,
    SUM(ord_qty_cse) AS ord_qty_cse,
    SUM(ord_qty_pc) AS ord_qty_pc,
    SUM(ord_pc_qty) AS ord_pc_qty,
    SUM(ord_sls_qty) AS ord_sls_qty,
    SUM(tran_ldtm) AS tran_ldtm,
    SUM(unspp_qty) AS unspp_qty,
    SUM(unspp_val) AS unspp_val,
    SUM(vol_delv) AS vol_delv,
    SUM(vol_ord) AS vol_ord,
    trim(itg_invc_sls.cal_day) as cal_day,
    nvl(trim(base_uom)::string,'') as base_uom,
    nvl(trim(curr_key)::string,'') as curr_key,
    nvl(trim(doc_curr)::string,'') as doc_curr,
    nvl(trim(sls_unit)::string,'') as sls_unit,
    CASE
      WHEN edw_calendar_dim.fisc_per IS NULL
      THEN CAST(itg_invc_sls.fisc_yr as int)
      ELSE edw_calendar_dim.fisc_per
    END::number(18,0) AS fisc_yr,
    itg_invc_sls.fisc_yr::number(18,0) AS fisc_yr_src
  FROM source as itg_invc_sls
  LEFT OUTER JOIN edw_calendar_dim
    ON itg_invc_sls.bill_dt = edw_calendar_dim.cal_day
  GROUP BY
    trim(act_delv_dt),
    trim(act_good_iss_dt),
    nvl(trim(bill_to_prty)::string,''),
    trim(bill_dt),
    nvl(trim(bill_ty)::string,''),
    nvl(trim(bill_doc)::string,''),
    nvl(trim(cmpy_cd)::string,''),
    nvl(trim(cust_no)::string,''),
    trim(delv_doc_crt_dt),
    nvl(trim(dstr_chnl)::string,''),
    nvl(trim(DIV)::string,''),
    trim(doc_crt_dt),
    trim(doc_dt),
    trim(good_iss_dt),
    nvl(trim(mat)::string,''),
    trim(mat_avail_dt),
    nvl(trim(ord_rsn)::string,''),
    nvl(trim(ovrl_rej_sts)::string,''),
    nvl(trim(ovrl_sts_crd_chk)::string,''),
    nvl(trim(payer)::string,''),
    nvl(trim(plant)::string,''),
    trim(prec_doc_itm),
    nvl(trim(prec_doc_num)::string,''),
    trim(proof_delv_dt),
    nvl(trim(rsn_cd_key)::string,''),
    nvl(trim(rsn_rej)::string,''),
    trim(rlse_dt_cr_mgmt),
    trim(rqst_delv_dt),
    nvl(trim(route)::string,''),
    nvl(trim(sls_doc)::string,''),
    nvl(trim(sls_doc_cat)::string,''),
    trim(sls_doc_itm),
    nvl(trim(sls_doc_typ)::string,''),
    trim(sls_emp_hist),
    nvl(trim(sls_org)::string,''),
    nvl(trim(sls_doc_itm_cat)::string,''),
    nvl(trim(ship_to_prty)::string,''),
    nvl(trim(sold_to_prty)::string,''),
    trim(itg_invc_sls.cal_day),
    nvl(trim(base_uom)::string,''),
    nvl(trim(curr_key)::string,''),
    nvl(trim(doc_curr)::string,''),
    nvl(trim(sls_unit)::string,''),
    itg_invc_sls.fisc_yr,
    edw_calendar_dim.fisc_per

)

select * from final
