with edw_copa_trans_fact as
(
    select * from aspedw_integration.edw_copa_trans_fact
    --{{ ref('aspedw_integration__edw_copa_trans_fact') }}
),
edw_material_dim as
(
    select * from aspedw_integration.edw_material_dim
    --{{ ref('aspedw_integration__edw_material_dim') }}
),
sdl_pvc_input_content as
(
    select * from DEV_DNA_LOAD.SNAPASPSDL_RAW.SDL_PVC_INPUT_CONTENT
),
final as
(
    SELECT A.matl_num,
        B.content,
        B.content_short,
        CAST(B.content_number AS numeric(20,5)) as content_number
    FROM
    (SELECT DISTINCT matl_num
        FROM edw_copa_trans_fact
        WHERE TRIM(matl_num) != '') A
    LEFT JOIN
    (SELECT A.matl_num,
        A.put_up,
        A.put_up_desc,
        B.content,
        B.content_short,
        B.content_number
    FROM edw_material_dim A
    LEFT JOIN
    (SELECT A.put_up,
        A.put_up_desc,
        B.content,
        B.content_short,
        A.content_number
    FROM (SELECT DISTINCT put_up,
                put_up_desc,
                CASE
                WHEN regexp_like(SPLIT_PART(put_up_desc,' ',1),'.*[0-9].*') THEN SPLIT_PART(put_up_desc,' ',2) || ' ' || SPLIT_PART(put_up_desc,' ',3)
                ELSE put_up_desc
                END AS content,
                CASE
                WHEN regexp_like(SPLIT_PART(put_up_desc,' ',1),'.*[0-9].*') THEN SPLIT_PART(put_up_desc,' ',1)
                ELSE NULL
                END AS content_number
        FROM edw_material_dim
        WHERE put_up_desc IS NOT NULL
        AND   TRIM(put_up_desc) <> '') A
    LEFT JOIN sdl_pvc_input_content B ON trim(A.content) = trim(B.content)) B
    ON A.put_up = B.put_up) B
    ON A.matl_num = B.matl_num
)
select * from final