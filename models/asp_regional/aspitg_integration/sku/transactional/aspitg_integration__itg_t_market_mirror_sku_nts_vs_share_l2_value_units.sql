{{
    config(
        materialized='incremental',
        incremental_strategy='append',
        pre_hook="{% if is_incremental() %}
        delete from {{this}} where (SELECT COUNT(*) FROM {{ source('core_access', 'v_l1_market_pulse_sku_nts_vs_share_l2_value_units_onestream_live_secure') }} where region='APAC' and left(time_period, 4) >= '2022') != 0;
        {% endif %}"
    )
}}

with source as 
(
    select * from {{ source('core_access', 'v_l1_market_pulse_sku_nts_vs_share_l2_value_units_onestream_live_secure') }} where region='APAC' and left(time_period, 4) >= '2022'
),
final as
(
    select region::varchar(50) as region,
    cluster::varchar(100) as cluster,
    market::varchar(50) as market,
    stronghold::varchar(100) as stronghold,
    brand::varchar(100) as brand,
    time_period::date as time_period,
    last_period::date as last_period,
    business_priority::varchar(50) as business_priority,
    nts_continuous::float as nts_continuous,
    nts_lm::float as nts_lm,
    nts_l3m::float as nts_l3m,
    nts_l6m::float as nts_l6m,
    nts_ytd::float as nts_ytd,
    nts_mat::float as nts_mat,
    nts_fy::float as nts_fy,
    nts_py_lm::float as nts_py_lm,
    nts_py_l3m::float as nts_py_l3m,
    nts_py_l6m::float as nts_py_l6m,
    nts_py_ytd::float as nts_py_ytd,
    nts_py_mat::float as nts_py_mat,
    nts_py_fy::float as nts_py_fy,
    nts_p2y_lm::float as nts_p2y_lm,
    nts_p2y_l3m::float as nts_p2y_l3m,
    nts_p2y_l6m::float as nts_p2y_l6m,
    nts_p2y_ytd::float as nts_p2y_ytd,
    nts_p2y_mat::float as nts_p2y_mat,
    nts_p2y_fy::float as nts_p2y_fy,
    continuous_kv_value::float as continuous_kv_value,
    shr_lm_kv_value::float as shr_lm_kv_value,
    shr_l3m_kv_value::float as shr_l3m_kv_value,
    shr_l6m_kv_value::float as shr_l6m_kv_value,
    shr_mat_kv_value::float as shr_mat_kv_value,
    shr_ytd_kv_value::float as shr_ytd_kv_value,
    shr_fy_kv_value::float as shr_fy_kv_value,
    shr_py_lm_kv_value::float as shr_py_lm_kv_value,
    shr_py_l3m_kv_value::float as shr_py_l3m_kv_value,
    shr_py_l6m_kv_value::float as shr_py_l6m_kv_value,
    shr_py_mat_kv_value::float as shr_py_mat_kv_value,
    shr_py_ytd_kv_value::float as shr_py_ytd_kv_value,
    shr_py_fy_kv_value::float as shr_py_fy_kv_value,
    shr_p2y_lm_kv_value::float as shr_p2y_lm_kv_value,
    shr_p2y_l3m_kv_value::float as shr_p2y_l3m_kv_value,
    shr_p2y_l6m_kv_value::float as shr_p2y_l6m_kv_value,
    shr_p2y_mat_kv_value::float as shr_p2y_mat_kv_value,
    shr_p2y_ytd_kv_value::float as shr_p2y_ytd_kv_value,
    shr_p2y_fy_kv_value::float as shr_p2y_fy_kv_value,
    continuous_value::float as continuous_value,
    shr_lm_value::float as shr_lm_value,
    shr_l3m_value::float as shr_l3m_value,
    shr_l6m_value::float as shr_l6m_value,
    shr_mat_value::float as shr_mat_value,
    shr_ytd_value::float as shr_ytd_value,
    shr_fy_value::float as shr_fy_value,
    shr_py_lm_value::float as shr_py_lm_value,
    shr_py_l3m_value::float as shr_py_l3m_value,
    shr_py_l6m_value::float as shr_py_l6m_value,
    shr_py_mat_value::float as shr_py_mat_value,
    shr_py_ytd_value::float as shr_py_ytd_value,
    shr_py_fy_value::float as shr_py_fy_value,
    shr_p2y_lm_value::float as shr_p2y_lm_value,
    shr_p2y_l3m_value::float as shr_p2y_l3m_value,
    shr_p2y_l6m_value::float as shr_p2y_l6m_value,
    shr_p2y_mat_value::float as shr_p2y_mat_value,
    shr_p2y_ytd_value::float as shr_p2y_ytd_value,
    shr_p2y_fy_value::float as shr_p2y_fy_value,
    continuous_kv_units::float as continuous_kv_units,
    shr_lm_kv_units::float as shr_lm_kv_units,
    shr_l3m_kv_units::float as shr_l3m_kv_units,
    shr_l6m_kv_units::float as shr_l6m_kv_units,
    shr_mat_kv_units::float as shr_mat_kv_units,
    shr_ytd_kv_units::float as shr_ytd_kv_units,
    shr_fy_kv_units::float as shr_fy_kv_units,
    shr_py_lm_kv_units::float as shr_py_lm_kv_units,
    shr_py_l3m_kv_units::float as shr_py_l3m_kv_units,
    shr_py_l6m_kv_units::float as shr_py_l6m_kv_units,
    shr_py_mat_kv_units::float as shr_py_mat_kv_units,
    shr_py_ytd_kv_units::float as shr_py_ytd_kv_units,
    shr_py_fy_kv_units::float as shr_py_fy_kv_units,
    shr_p2y_lm_kv_units::float as shr_p2y_lm_kv_units,
    shr_p2y_l3m_kv_units::float as shr_p2y_l3m_kv_units,
    shr_p2y_l6m_kv_units::float as shr_p2y_l6m_kv_units,
    shr_p2y_mat_kv_units::float as shr_p2y_mat_kv_units,
    shr_p2y_ytd_kv_units::float as shr_p2y_ytd_kv_units,
    shr_p2y_fy_kv_units::float as shr_p2y_fy_kv_units,
    continuous_units::float as continuous_units,
    shr_lm_units::float as shr_lm_units,
    shr_l3m_units::float as shr_l3m_units,
    shr_l6m_units::float as shr_l6m_units,
    shr_mat_units::float as shr_mat_units,
    shr_ytd_units::float as shr_ytd_units,
    shr_fy_units::float as shr_fy_units,
    shr_py_lm_units::float as shr_py_lm_units,
    shr_py_l3m_units::float as shr_py_l3m_units,
    shr_py_l6m_units::float as shr_py_l6m_units,
    shr_py_mat_units::float as shr_py_mat_units,
    shr_py_ytd_units::float as shr_py_ytd_units,
    shr_py_fy_units::float as shr_py_fy_units,
    shr_p2y_lm_units::float as shr_p2y_lm_units,
    shr_p2y_l3m_units::float as shr_p2y_l3m_units,
    shr_p2y_l6m_units::float as shr_p2y_l6m_units,
    shr_p2y_mat_units::float as shr_p2y_mat_units,
    shr_p2y_ytd_units::float as shr_p2y_ytd_units,
    shr_p2y_fy_units::float as shr_p2y_fy_units
 from source
)
select * from final