{{
    config(
        materialized="incremental",
        incremental_strategy= "delete+insert",
        unique_key=  ['item_cd']
    )
}}

with itg_th_dtsitemmaster as(
    select * from dev_dna_core.snaposeitg_integration.itg_th_dtsitemmaster
),
itg_th_dtsnpi as(
    select * from dev_dna_core.snaposeitg_integration.itg_th_dtsnpi
),
itg_th_dtsitemunit as(
    select * from dev_dna_core.snaposeitg_integration.itg_th_dtsitemunit
),
transformed as(
select 
  ltrim(trim(item_cd), 0) as item_cd, 
  trim(im.name1) as name_thai, 
  trim(im.name2) as name_eng, 
  trim(defstk_unt_cd) as defstk_unt_cd, 
  trim(u.name1) as unt_thai, 
  trim(u.name2) as unt_eng, 
  trim(prod_grp_id) as prod_grp_id, 
  trim(grp_cd) as grp_cd, 
  trim(typ_cd) as typ_cd, 
  trim(catgry_cd) as catgry_cd, 
  trim(brnd_cd) as brnd_cd, 
  trim(format_cd) as format_cd, 
  trim(barcd) as bar_cd, 
  sls_prc1 as sls_prc_van, 
  sls_prc2 as sls_prc_credit, 
  sls_prc3 as sls_prc3, 
  sls_prc4 as sls_prc4, 
  tax_typ as tax_typ, 
  from_qty as from_qty, 
  to_qty as to_qty, 
  trim(prc_remark) as prc_remark, 
  trim(color_cd) as color_cd, 
  trim(mygrade) as mygrade, 
  trim(myclass) as myclass, 
  unit_typ as unit_typ, 
  cost_typ as cost_typ, 
  stock_typ as stock_typ, 
  trim(def_sls_unt_cd) as def_sls_unt_cd, 
  trim(def_buy_unt_cd) as def_buy_unt_cd, 
  trim(mysize) as mysize, 
  weight as weight, 
  exceptax as exceptax, 
  trim(mydesc) as mydesc, 
  actv_status as actv_status, 
  barcd_actv_status as barcd_actv_status, 
  trim(barcd_remark) as barcd_remark, 
  canmakepo as canmakepo, 
  buy_prc1 as buy_prc1, 
  buy_prc2 as buy_prc2, 
  buy_prc3 as buy_prc3, 
  buy_prc4 as buy_prc4, 
  trnsprt_tm as trnsprt_tm, 
  trim(vend_cd) as vend_cd, 
  trim(def_sls_wh_cd) as def_sls_wh_cd, 
  trim(def_buy_wh_cd) as def_buy_wh_cd, 
  trim(def_sls_shelf) as def_sls_shelf, 
  trim(def_buy_shelf) as def_buy_shelf, 
  cost_level1 as cost_level1, 
  cost_level2 as cost_level2, 
  cost_level3 as cost_level3, 
  cost_level4 as cost_level4, 
  trim(uom) as uom, 
  unit_per_case as unit_per_case, 
  trim(isexception) as isexception, 
  isforvmr as isforvmr, 
  trim(th_shrt_nm) as th_shrt_nm, 
  trim(en_shrt_nm) as en_shrt_nm, 
  crt_dt as crt_dt, 
  im.updt_dt as updt_dt, 
  case when nullif(im.is_hero, '') is not null then 'Y' else 'N' end as is_hero, 
  case when nullif(npi.prod_cd, '') is not null then 'Y' else 'N' end as is_npi, 
  case when nullif(npi.prod_cd, '') is not null then npi.startdate else null end as npi_startdate, 
  case when nullif(npi.prod_cd, '') is not null then npi.enddate else null end as npi_enddate, 
  im.cdl_dttm as cdl_dttm, 
  current_timestamp()::timestamp_ntz(9) as crtd_dttm, 
  current_timestamp()::timestamp_ntz(9) as updt_dttm, 
  trim(parentcode) as parentcode 
from itg_th_dtsitemmaster im 
  left outer join itg_th_dtsnpi npi on ltrim (trim (item_cd), 0) = ltrim (trim (npi.prod_cd), 0) 
  left outer join itg_th_dtsitemunit u on trim (im.defstk_unt_cd) = trim (u.code)
),
final as(
    select 
        item_cd::varchar(50) as item_cd,
        name_thai::varchar(500) as name_thai,
        name_eng::varchar(500) as name_eng,
        defstk_unt_cd::varchar(10) as defstk_unt_cd,
        unt_thai::varchar(50) as unt_thai,
        unt_eng::varchar(50) as unt_eng,
        prod_grp_id::varchar(10) as prod_grp_id,
        grp_cd::varchar(10) as grp_cd,
        typ_cd::varchar(10) as typ_cd,
        catgry_cd::varchar(10) as catgry_cd,
        brnd_cd::varchar(10) as brnd_cd,
        format_cd::varchar(10) as format_cd,
        bar_cd::varchar(20) as bar_cd,
        sls_prc_van::number(19,6) as sls_prc_van,
        sls_prc_credit::number(19,6) as sls_prc_credit,
        sls_prc3::number(19,6) as sls_prc3,
        sls_prc4::number(19,6) as sls_prc4,
        tax_typ::number(18,0) as tax_typ,
        from_qty::number(19,6) as from_qty,
        to_qty::number(19,6) as to_qty,
        prc_remark::varchar(100) as prc_remark,
        color_cd::varchar(100) as color_cd,
        mygrade::varchar(40) as mygrade,
        myclass::varchar(20) as myclass,
        unit_typ::number(18,0) as unit_typ,
        cost_typ::number(18,0) as cost_typ,
        stock_typ::number(18,0) as stock_typ,
        def_sls_unt_cd::varchar(10) as def_sls_unt_cd,
        def_buy_unt_cd::varchar(10) as def_buy_unt_cd,
        mysize::varchar(40) as mysize,
        weight::number(19,6) as weight,
        exceptax::number(18,0) as exceptax,
        mydesc::varchar(255) as mydesc,
        actv_status::number(18,0) as actv_status,
        barcd_actv_status::number(18,0) as barcd_actv_status,
        barcd_remark::varchar(400) as barcd_remark,
        canmakepo::number(18,0) as canmakepo,
        buy_prc1::number(19,6) as buy_prc1,
        buy_prc2::number(19,6) as buy_prc2,
        buy_prc3::number(19,6) as buy_prc3,
        buy_prc4::number(19,6) as buy_prc4,
        trnsprt_tm::number(18,0) as trnsprt_tm,
        vend_cd::varchar(10) as vend_cd,
        def_sls_wh_cd::varchar(10) as def_sls_wh_cd,
        def_buy_wh_cd::varchar(10) as def_buy_wh_cd,
        def_sls_shelf::varchar(10) as def_sls_shelf,
        def_buy_shelf::varchar(10) as def_buy_shelf,
        cost_level1::number(19,6) as cost_level1,
        cost_level2::number(19,6) as cost_level2,
        cost_level3::number(19,6) as cost_level3,
        cost_level4::number(19,6) as cost_level4,
        uom::varchar(10) as uom,
        unit_per_case::number(18,0) as unit_per_case,
        isexception::varchar(1) as isexception,
        isforvmr::number(18,0) as isforvmr,
        th_shrt_nm::varchar(200) as th_shrt_nm,
        en_shrt_nm::varchar(200) as en_shrt_nm,
        crt_dt::timestamp_ntz(9) as crt_dt,
        updt_dt::timestamp_ntz(9) as updt_dt,
        is_hero::varchar(1) as is_hero,
        is_npi::varchar(1) as is_npi,
        npi_startdate::date as npi_start_dt,
        npi_enddate::date as npi_end_dt,
        cdl_dttm::varchar(255) as cdl_dttm,
        crtd_dttm::timestamp_ntz(9) as crtd_dttm,
        updt_dttm::timestamp_ntz(9) as updt_dttm,
        parentcode::varchar(600) as parentcode
    from transformed
)
select * from final
