version: 2

sources:
  - name: idnsdl_raw
    database: "{{ env_var('DBT_ENV_LOAD_DB') }}"
    schema: idnsdl_raw
    quoting:
      database: false
      schema: false
      identifier: false
    tables:
    - name:  sdl_mds_id_dist_reporting_control
      tags: ["id_mds_itg_load","ingestion"]
      tests:
          - test_null:
              select_columns: ["distributorcode","sourcesystem","effectivefrom","effectiveto","refreshfrom","sourcetype"]
              not_null_columns: ["distributorcode","sourcesystem","effectivefrom","effectiveto"]
              name: TRATBL_sdl_mds_id_dist_reporting_control__null_test
              config:
                store_failures: true
                schema: idnwks_integration
          - test_duplicate:
              select_columns: ["distributorcode","sourcesystem","effectivefrom","effectiveto","refreshfrom","sourcetype"]
              group_by_columns: ["distributorcode","sourcesystem","effectivefrom","effectiveto","refreshfrom","sourcetype"]
              name: TRATBL_sdl_mds_id_dist_reporting_control__duplicate_test
              config:
                store_failures: true
                schema: idnwks_integration
          - test_format:
              select_columns: ["distributorcode","sourcesystem","effectivefrom","effectiveto","refreshfrom","sourcetype"]
              failure_reason: "'Period Overlapping - effectivefrom/effectiveto/refreshfrom is Overlapping for Stock Source Type'"
              where_clause: "UPPER(distributorcode) IN ( SELECT DISTINCT UPPER(distributorcode) FROM ( SELECT distributorcode, jj_mnth_id, COUNT(*) FROM ( SELECT DISTINCT mds.distributorcode, mds.sourcesystem, etd.jj_mnth_id FROM ( SELECT distributorcode, sourcesystem, CASE WHEN refreshfrom IS NOT NULL THEN refreshfrom ELSE effectivefrom END AS effectivefrom, effectiveto FROM ( SELECT DISTINCT UPPER(TRIM(distributorcode)) distributorcode, UPPER(TRIM(sourcesystem)) sourcesystem, CAST(effectivefrom AS NUMERIC) effectivefrom, CAST(effectiveto AS NUMERIC) effectiveto, CAST(refreshfrom AS NUMERIC) refreshfrom FROM {{ source('idnsdl_raw', 'sdl_mds_id_dist_reporting_control') }} WHERE UPPER(sourcetype) = 'STOCK' ORDER BY UPPER(TRIM(distributorcode)), CAST(effectivefrom AS NUMERIC), CAST(refreshfrom AS NUMERIC) ) ) mds, ( SELECT DISTINCT jj_mnth_id FROM {{ source('idnedw_integration', 'edw_time_dim') }} ) etd WHERE CASE WHEN effectiveto IS NOT NULL AND etd.jj_mnth_id >= mds.effectivefrom AND etd.jj_mnth_id <= mds.effectiveto THEN 1 WHEN effectiveto IS NULL AND etd.jj_mnth_id >= mds.effectivefrom AND etd.jj_mnth_id <= ( SELECT DISTINCT jj_mnth_id FROM {{ source('idnedw_integration', 'edw_time_dim') }} WHERE (cal_date) = current_timestamp()::date ) THEN 1 END = 1 ORDER BY distributorcode, jj_mnth_id ) GROUP BY distributorcode, jj_mnth_id HAVING COUNT(*) > 1 ) ORDER BY upper(distributorcode) ) AND UPPER(sourcetype) = 'STOCK'"
              name: TRATBL_sdl_mds_id_dist_reporting_control__lookup_test
              config:
                store_failures: true
                schema: idnwks_integration
          - test_format:
              select_columns: ["distributorcode","sourcesystem","effectivefrom","effectiveto","refreshfrom","sourcetype"]
              failure_reason: "'Period Overlapping - effectivefrom/effectiveto/refreshfrom is Overlapping for Sales Source Type'"
              where_clause: "UPPER(distributorcode) IN ( SELECT DISTINCT UPPER(distributorcode) FROM ( SELECT distributorcode, jj_mnth_id, COUNT(*) FROM ( SELECT DISTINCT mds.distributorcode, mds.sourcesystem, etd.jj_mnth_id FROM ( SELECT distributorcode, sourcesystem, CASE WHEN refreshfrom IS NOT NULL THEN refreshfrom ELSE effectivefrom END AS effectivefrom, effectiveto FROM ( SELECT DISTINCT UPPER(TRIM(distributorcode)) distributorcode, UPPER(TRIM(sourcesystem)) sourcesystem, CAST(effectivefrom AS NUMERIC) effectivefrom, CAST(effectiveto AS NUMERIC) effectiveto, CAST(refreshfrom AS NUMERIC) refreshfrom FROM {{ source('idnsdl_raw', 'sdl_mds_id_dist_reporting_control') }} WHERE UPPER(sourcetype) = 'SALES' ORDER BY UPPER(TRIM(distributorcode)), CAST(effectivefrom AS NUMERIC), CAST(refreshfrom AS NUMERIC) ) ) mds, ( SELECT DISTINCT jj_mnth_id FROM {{ source('idnedw_integration', 'edw_time_dim') }} ) etd WHERE CASE WHEN effectiveto IS NOT NULL AND etd.jj_mnth_id >= mds.effectivefrom AND etd.jj_mnth_id <= mds.effectiveto THEN 1 WHEN effectiveto IS NULL AND etd.jj_mnth_id >= mds.effectivefrom AND etd.jj_mnth_id <= ( SELECT DISTINCT jj_mnth_id FROM {{ source('idnedw_integration', 'edw_time_dim') }} WHERE (cal_date) = current_timestamp()::date ) THEN 1 END = 1 ORDER BY distributorcode, jj_mnth_id ) GROUP BY distributorcode, jj_mnth_id HAVING COUNT(*) > 1 ) ORDER BY upper(distributorcode) ) AND UPPER(sourcetype) = 'SALES'"
              name: TRATBL_sdl_mds_id_dist_reporting_control__lookup_test2
              config:
                store_failures: true
                schema: idnwks_integration
